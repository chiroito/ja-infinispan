# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-02-11 23:24+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: upstream/_posts/2017-01-11-near-cache-for-native-cc-client-example.adoc:1
#, no-wrap, fuzzy
msgid "---\n"
msgstr "---\n"

#. type: Plain text
#: upstream/_posts/2017-01-11-near-cache-for-native-cc-client-example.adoc:10
#, no-wrap, fuzzy
msgid ""
"layout: blog\n"
"title: Near Cache for native C++/C# Client example\n"
"permalink: /blog/:year/:month/:day/near-cache-for-native-cc-client-example\n"
"date: '2017-01-11T07:11:00.001-08:00'\n"
"author: rigazilla\n"
"tags: [ \" c++\", \"hotrod\", \"near caching\", \"8.1.0\", \"cpp-client\", "
"\"dotnet-client\", \"c#\" ]\n"
"blogger_id: tag:blogger.com,1999:blog-5717179571414330874.post-"
"7743170217750163171\n"
"blogger_orig_url: https://blog.infinispan.org/2017/01/near-cache-for-native-"
"cc-client-example.html\n"
"---\n"
msgstr ""
"layout: blog\n"
"title: ネイティブC++/C#クライアント用のニアキャッシュの例\n"
"permalink: /blog/:year/:month/:day/near-cache-for-native-cc-client-example\n"
"date: '2017-01-11T07:11:00.001-08:00'\n"
"author: rigazilla\n"
"tags: [ \" c++\", \"hotrod\", \"near caching\", \"8.1.0\", \"cpp-client\", "
"\"dotnet-client\", \"c#\" ]\n"
"blogger_id: tag:blogger.com,1999:blog-5717179571414330874.post-"
"7743170217750163171\n"
"blogger_orig_url: https://blog.infinispan.org/2017/01/near-cache-for-native-"
"cc-client-example.html\n"
"---\n"

#. type: Plain text
#: upstream/_posts/2017-01-11-near-cache-for-native-cc-client-example.adoc:12
#, fuzzy
msgid "Dear Readers,"
msgstr "読者の皆様へ"

#. type: Plain text
#: upstream/_posts/2017-01-11-near-cache-for-native-cc-client-example.adoc:16
#, fuzzy
msgid ""
"as mentioned in our previous post about the new C++/C# release http://blog."
"infinispan.org/2017/01/hotrod-clients-cc-810beta1-released.html[8.1.0."
"Beta1], clients are now equipped with near cache support."
msgstr ""
"C++/C# の新しいリリース link:http://blog.infinispan.org/2017/01/hotrod-clients-cc-"
"810beta1-released.html[8.1.0.Beta1] "
"についての以前の記事で述べたように、クライアントにはニアキャッシュのサポートが搭載されています。"

#. type: Plain text
#: upstream/_posts/2017-01-11-near-cache-for-native-cc-client-example.adoc:21
#, fuzzy
msgid ""
"The near cache is an additional cache level that keeps the most recently "
"used cache entries in an \"in memory\" data structure. Near cached objects "
"are synchronized with the remote server value in the background and can be "
"get as fast as a map[] operation."
msgstr ""
"ニアキャッシュは、最近使用されたキャッシュエントリを「メモリ内」のデータ構造に保持する追加のキャッシュレベルです。ニアキャッシュされたオブジェクトは、バックグラウンドでリモートサーバの値と同期され、map[]操作と同じくらいの速さで取得することができます。"

#. type: Plain text
#: upstream/_posts/2017-01-11-near-cache-for-native-cc-client-example.adoc:25
#, fuzzy
msgid ""
"So, your client tends to periodically focus the operations on a subset of "
"your entries? This feature could be of help: it's easy to use, just enable "
"it and you'll have near cache seamless under the wood."
msgstr ""
"だから、あなたのクライアントは定期的にあなたのエントリのサブセットに操作を集中する傾向がありますか？この機能は助けになるかもしれません: "
"それは使いやすいです, ちょうどそれを有効にして、あなたは木の下でシームレスなキャッシュの近くを持っているでしょう."

#. type: Plain text
#: upstream/_posts/2017-01-11-near-cache-for-native-cc-client-example.adoc:27
#, fuzzy
msgid "A C++ example of a cache with near cache configuration"
msgstr "キャッシュ構成が近いキャッシュのC++例"

#. type: Plain text
#: upstream/_posts/2017-01-11-near-cache-for-native-cc-client-example.adoc:38
#, fuzzy
msgid ""
"The last line does the magic, the INVALIDATED mode is the active mode for "
"the near cache (default mode is DISABLED which means no near cache, see Java "
"docs), maxEntries is the maximum number of entries that can be stored nearly."
" If the near cache is full the oldest entry will be evicted. Set maxEntries="
"0 for unbounded cache (do you have enough memory?)  Now a full example of "
"application that just does some gets and puts and counts how many of them "
"are served remote and how many are served nearly. As you can see the cache "
"object is an instance of the \"well known\" RemoteCache class"
msgstr ""
"INVALIDATEDモードはニアキャッシュのアクティブモード(デフォルトモードはDISABLEDでニアキャッシュがないことを意味します。Javaドキュメントを参照してください)、maxEntriesはニアキャッシュに保存できるエントリの最大数です。ニアキャッシュが満杯の場合、最も古いエントリが削除されます。束縛されていないキャッシュの場合は "
"maxEntries=0 に設定してください (十分なメモリを持っていますか？) "
"さて、いくつかのgetとputを実行して、リモートで何件のgetとputが提供されたか、また何件のニアキャッシュが提供されたかをカウントするアプリケーションの完全な例を示します。キャッシュオブジェクトは「よく知られた」RemoteCacheクラスのインスタンスであることがわかります。"

#. type: Plain text
#: upstream/_posts/2017-01-11-near-cache-for-native-cc-client-example.adoc:43
#, fuzzy
msgid ""
"Entries values in the near cache are kept aligned with the remote cache "
"state via the events subsystem: if something changes in the server, an "
"update event (modified, expired, removed) is sent to the client that updates "
"the cache accordingly."
msgstr ""
"ニアキャッシュ内のエントリの値は、イベントサブシステムを介してリモートキャッシュの状態と一致した状態に保たれます：サーバ内で何かが変更されると、更新イベント（変更、期限切れ、削除）がクライアントに送信され、それに応じてキャッシュが更新されます。"

#. type: Plain text
#: upstream/_posts/2017-01-11-near-cache-for-native-cc-client-example.adoc:46
#, fuzzy
msgid ""
"By the way: do you know that C++/C# clients can subscribe listener to "
"events? In the next \"native\" post we will see how."
msgstr ""
"ところで、C++/"
"C#クライアントはイベントのリスナーをサブスクライブできることを知っていますか？次回の「ネイティブ」の投稿では、その方法を見てみましょう。"

#. type: Plain text
#: upstream/_posts/2017-01-11-near-cache-for-native-cc-client-example.adoc:48
#, fuzzy
msgid "Cheers! and thank you for reading."
msgstr "乾杯！そして、読んでいただきありがとうございます。"
