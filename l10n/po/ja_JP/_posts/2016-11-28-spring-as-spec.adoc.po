# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-02-11 23:24+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: upstream/_posts/2016-11-28-spring-as-spec.adoc:1
#, no-wrap
msgid "---\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-11-28-spring-as-spec.adoc:11
#, no-wrap
msgid ""
"layout: blog\n"
"title: Spring as a Spec?\n"
"permalink: /blog/:year/:month/:day/spring-as-spec\n"
"date: '2016-11-28T04:33:00.002-08:00'\n"
"author: slaskawiec\n"
"tags: [ \"spring\" ]\n"
"thumbnail: https://1.bp.blogspot.com/-RaDzYHbGJIw/WDggizSIitI/AAAAAAAAHy0/KsU26P5tphgZ87cmUpOMFYML3ERttCaAACLcB/s72-c/versions.jpg\n"
"blogger_id: tag:blogger.com,1999:blog-5717179571414330874.post-5448666522072528824\n"
"blogger_orig_url: https://blog.infinispan.org/2016/11/spring-as-spec.html\n"
"---\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-11-28-spring-as-spec.adoc:15
msgid "We've been maintaining Spring integrations bits in Infinispan for quite a while. Our development version, Infinispan 9, contains a set of changes in those modules which deserve some explanation..."
msgstr ""

#. type: Title ==
#: upstream/_posts/2016-11-28-spring-as-spec.adoc:18
#, no-wrap
msgid "Versions... versions everywhere..."
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-11-28-spring-as-spec.adoc:23
msgid "https://1.bp.blogspot.com/-RaDzYHbGJIw/WDggizSIitI/AAAAAAAAHy0/KsU26P5tphgZ87cmUpOMFYML3ERttCaAACLcB/s1600/versions.jpg[image:https://1.bp.blogspot.com/-RaDzYHbGJIw/WDggizSIitI/AAAAAAAAHy0/KsU26P5tphgZ87cmUpOMFYML3ERttCaAACLcB/s320/versions.jpg[image,width=320,height=243]]"
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-11-28-spring-as-spec.adoc:38
msgid "When you use Infinispan, you rely on some, very specific version. The same applies to Spring. Before Infinispan 9 our integration modules had a compile-time dependency to a very specific version of Spring. In practice, we imposed this specific version to each project which used our integration bits. The question is - what to do to use some other version of Spring or Spring Boot? Till Infinispan 9, the simplest solution was to exclude Spring from _infinispan-spring4-embedded_ (or _infinispan-spring4-remote_) artifact using https://maven.apache.org/guides/introduction/introduction-to-optional-and-excludes-dependencies.html[Maven exclusions]. Not a very nice and intuitive solution was it?"
msgstr ""

#. type: Title ==
#: upstream/_posts/2016-11-28-spring-as-spec.adoc:39
#, no-wrap
msgid "How about treating Spring as a Spec or API"
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-11-28-spring-as-spec.adoc:45
msgid "You probably noticed, when you use JPA you don't care about underlying implementation. Is it Hibernate, OpenJPA... it doesn't matter?"
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-11-28-spring-as-spec.adoc:55
msgid "If you think carefully about Spring for a while, it's a bit similar. All core classes might be delivered using standard dependency mechanism (adding spring-beans,Â spring-context manually), using Spring Boot (adding spring-boot-starter) or even using 3rd party integration tools like DropWizard. In case of a bigger project, a decision whether or not use any of those solutions needs to be taken long before Infinispan is chosen as a Distributed Store or Cache."
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-11-28-spring-as-spec.adoc:60
msgid "At this point, we can do a mental experiment - treat Spring classes as a Spec or API and those delivery mechanisms treat as implementations."
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-11-28-spring-as-spec.adoc:65
#, no-wrap
msgid "===\n"
msgstr ""

#. type: Title ===
#: upstream/_posts/2016-11-28-spring-as-spec.adoc:67
#, no-wrap
msgid "Scope? Provided, of course!"
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-11-28-spring-as-spec.adoc:76
msgid "From Infinispan integration perspective we need the Spring API (the classes) and we don't care about the implementation (delivery mechanism). Having this in mind we https://github.com/infinispan/infinispan/commit/76a584bce3566fd855a9629cb3ad9164461c3c45[decided to change Spring's scope in Infinispan modules to provided]."
msgstr ""

#. type: Title ===
#: upstream/_posts/2016-11-28-spring-as-spec.adoc:78
#, no-wrap
msgid "I use Infinispan and Spring, what shall I do?"
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-11-28-spring-as-spec.adoc:89
msgid "Starting from Infinispan 9, you can stop using exclusions. You probably already use Spring and your favorite delivery mechanism (Spring Boot for example). Then add _infinispan-spring4-embedded_ or _infinispan-spring4-remote_ artifact. Finally, you need to decide how would you like to use Infinispan - via Uber Jars (_infinispan-embedded_ and _infinispan-remote_) or using Small Jars (_infinispan-core_ for example)."
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-11-28-spring-as-spec.adoc:93
msgid "That's it! Have fun!"
msgstr ""
