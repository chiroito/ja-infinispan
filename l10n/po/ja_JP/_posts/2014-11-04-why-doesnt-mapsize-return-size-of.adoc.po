# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-02-11 23:24+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: upstream/_posts/2014-11-04-why-doesnt-mapsize-return-size-of.adoc:1
#, no-wrap
msgid "---\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2014-11-04-why-doesnt-mapsize-return-size-of.adoc:10
#, no-wrap
msgid ""
"layout: blog\n"
"title: Why doesn't Map.size return the size of the entire cluster?\n"
"permalink: /blog/:year/:month/:day/why-doesnt-mapsize-return-size-of\n"
"date: '2014-11-04T05:41:00.000-08:00'\n"
"author: infinispan\n"
"tags: []\n"
"blogger_id: tag:blogger.com,1999:blog-5717179571414330874.post-7688496915197931482\n"
"blogger_orig_url: https://blog.infinispan.org/2014/11/why-doesnt-mapsize-return-size-of.html\n"
"---\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2014-11-04-why-doesnt-mapsize-return-size-of.adoc:14
msgid "Many people may have been surprised the first time they used Map.size method on a distributed Infinispan cluster.  As was later deduced only the local node size is returned."
msgstr ""

#. type: Plain text
#: upstream/_posts/2014-11-04-why-doesnt-mapsize-return-size-of.adoc:19
msgid "Infinispan had taken this approach to limit the chance that instead of getting the full cluster size you would receive an OutOfMemoryError.  This seems fair to return the local answer only but you secretly always wanted the entire cluster size."
msgstr ""

#. type: Plain text
#: upstream/_posts/2014-11-04-why-doesnt-mapsize-return-size-of.adoc:24
msgid "For the http://blog.infinispan.org/2014/11/infinispan-700final-is-out.html[Infinispan 7.0.0.Final release] forget what you know when using the Map interface with Infinispan."
msgstr ""

#. type: Title ==
#: upstream/_posts/2014-11-04-why-doesnt-mapsize-return-size-of.adoc:27
#, no-wrap
msgid "Enter Distributed Entry Iterator"
msgstr ""

#. type: Plain text
#: upstream/_posts/2014-11-04-why-doesnt-mapsize-return-size-of.adoc:34
msgid "We already announced this feature a while back at http://blog.infinispan.org/2014/05/iterate-all-entries-in-cache.html.  You can check it out for more details but it is essentially a memory efficient way of retrieving all the entries in the cache by iterating over them."
msgstr ""

#. type: Plain text
#: upstream/_posts/2014-11-04-why-doesnt-mapsize-return-size-of.adoc:38
msgid "This has opened the way to implementing the various bulk methods on the Map interface that we could never do efficiently in the past (ie.  Map.size, Map.keySet, Map.entrySet & Map.values)."
msgstr ""

#. type: Title ==
#: upstream/_posts/2014-11-04-why-doesnt-mapsize-return-size-of.adoc:40
#, no-wrap
msgid "Map size"
msgstr ""

#. type: Plain text
#: upstream/_posts/2014-11-04-why-doesnt-mapsize-return-size-of.adoc:48
msgid "Okay I admit, size could have been done more efficiently before, but the answer would have contained a very high margin of error.  Now size will give you a size value with consistency semantics just slightly less than ConcurrentHashMap does, but for the entire cluster.  Warning should be given that size may be slower for larger clusters or ones with a lot of data in a stored cache loader."
msgstr ""

#. type: Plain text
#: upstream/_posts/2014-11-04-why-doesnt-mapsize-return-size-of.adoc:54
msgid "The size method behavior can be controlled by using a supplied https://docs.jboss.org/infinispan/7.0/apidocs/org/infinispan/AdvancedCache.html#withFlags%28org.infinispan.context.Flag...%29[Flag] such as SKIP_CACHE_LOAD to not count any configured cache loaders or CACHE_MODE_LOCAL if you want the local count only.  These flags are not exclusive and can be both passed if desired as well."
msgstr ""

#. type: Title ==
#: upstream/_posts/2014-11-04-why-doesnt-mapsize-return-size-of.adoc:58
#, no-wrap
msgid "Map Collection Views"
msgstr ""

#. type: Plain text
#: upstream/_posts/2014-11-04-why-doesnt-mapsize-return-size-of.adoc:63
msgid "In the past the Map.values, Map.keySet & Map.entrySet methods were only ever in memory copies of the local data at the time they were invoked, similar to Map.size."
msgstr ""

#. type: Plain text
#: upstream/_posts/2014-11-04-why-doesnt-mapsize-return-size-of.adoc:69
msgid "Now these collection views will be cluster wide and an additionally will show updated contents when the cache is updated and your writes to the collection will be reflected in the Cache itself!  The only operations you can't do on these collections are adding values to either the keySet or values collections as they aren't key/value pairs."
msgstr ""

#. type: Plain text
#: upstream/_posts/2014-11-04-why-doesnt-mapsize-return-size-of.adoc:73
msgid "If your cache was configured with a Flag such as SKIP_CACHE_LOAD or CACHE_MODE_LOCAL it will also be reflected in the collection view for both reads and writes."
msgstr ""

#. type: Plain text
#: upstream/_posts/2014-11-04-why-doesnt-mapsize-return-size-of.adoc:76
msgid "Some caution is advised when using toArray, retainAll, or size methods as they will require full iteration to complete."
msgstr ""

#. type: Plain text
#: upstream/_posts/2014-11-04-why-doesnt-mapsize-return-size-of.adoc:78
#, no-wrap
msgid "*KeySet Optimization*\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2014-11-04-why-doesnt-mapsize-return-size-of.adoc:82
msgid "The key set collection also has an optimization so it will never pull down the values so it has a lower network and serialization/deserialization overhead (unlike entrySet and values)."
msgstr ""

#. type: Title ==
#: upstream/_posts/2014-11-04-why-doesnt-mapsize-return-size-of.adoc:84
#, no-wrap
msgid "Transactionality"
msgstr ""

#. type: Plain text
#: upstream/_posts/2014-11-04-why-doesnt-mapsize-return-size-of.adoc:91
msgid "All of the aforementioned methods still support transactions in a way that you would expect.  There is one guarantee we don't provide and that is when using REPEATABLE_READ isolation.  We will not store entries read from an iterator in the transactional context as this could very easily run your local node out of memory with a large enough data set."
msgstr ""

#. type: Plain text
#: upstream/_posts/2014-11-04-why-doesnt-mapsize-return-size-of.adoc:95
msgid "For reference methods that use an iterator internally are toArray, retainAll, isEmpty & size on the various collections as well as contains and containsAll on the values collection."
msgstr ""

#. type: Title ==
#: upstream/_posts/2014-11-04-why-doesnt-mapsize-return-size-of.adoc:96
#, no-wrap
msgid "Other API Changes"
msgstr ""

#. type: Plain text
#: upstream/_posts/2014-11-04-why-doesnt-mapsize-return-size-of.adoc:100
msgid "These changes have also loosened some restrictions on other methods as well."
msgstr ""

#. type: Title ===
#: upstream/_posts/2014-11-04-why-doesnt-mapsize-return-size-of.adoc:102
#, no-wrap
msgid "Map.isEmpty"
msgstr ""

#. type: Plain text
#: upstream/_posts/2014-11-04-why-doesnt-mapsize-return-size-of.adoc:110
msgid "This method before was only used locally as it used to calculate the size to determine if it was empty.  This method will now use the entry iterator and returns as soon as it finds that even a single value exists.  This is an important change as the old implementation would have to query any configured Cache Loader's complete size before returning."
msgstr ""

#. type: Title ===
#: upstream/_posts/2014-11-04-why-doesnt-mapsize-return-size-of.adoc:112
#, no-wrap
msgid "Map.containsValue"
msgstr ""

#. type: Plain text
#: upstream/_posts/2014-11-04-why-doesnt-mapsize-return-size-of.adoc:121
msgid "We never supported this method before (not even locally).  This method will now use the iterator though and if it finds the value at any point point will return immediately so it doesn't have to iterate over the entire contents unless they don't exist.  However if you really want to do this operation often you should really use http://infinispan.org/docs/7.0.x/user_guide/user_guide.html#sid-68355061[Indexing] to make this faster."
msgstr ""

#. type: Title ==
#: upstream/_posts/2014-11-04-why-doesnt-mapsize-return-size-of.adoc:123
#, no-wrap
msgid "Code Examples"
msgstr ""

#. type: Plain text
#: upstream/_posts/2014-11-04-why-doesnt-mapsize-return-size-of.adoc:128
msgid "I could put an example here, but I think some could take it as insult.  You have already seen 100's of examples as to how to use the Map interface and now in Infinispan you can use those in the exact same way and they will work just how you would expect them to."
msgstr ""
