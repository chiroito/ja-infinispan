# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-02-11 23:24+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:1
#, no-wrap
msgid "---\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:15
#, no-wrap
msgid ""
"layout: blog\n"
"title: In Memory Data Grid Patterns Demos from Devoxx France!\n"
"permalink: /blog/:year/:month/:day/in-memory-data-grid-patterns-demos-from\n"
"date: '2017-04-07T01:38:00.002-07:00'\n"
"author: galder\n"
"tags: [ \" conference\", \"devoxx\",\n"
"\"demo\",\n"
"\"streams\",\n"
"\"query\",\n"
"]\n"
"thumbnail: https://1.bp.blogspot.com/-0WwGpCjfU1g/WOdG4rNJ8QI/AAAAAAAAE10/L0bV9eq8RZgIDw-C51UyukbZRuZJUyPCQCLcB/s72-c/Screen%2BShot%2B2017-04-07%2Bat%2B09.58.56.png\n"
"blogger_id: tag:blogger.com,1999:blog-5717179571414330874.post-5441116349842725637\n"
"blogger_orig_url: https://blog.infinispan.org/2017/04/in-memory-data-grid-patterns-demos-from.html\n"
"---\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:21
msgid "http://devoxx.fr/[Devoxx France 2017] was a blast!! Emmanuel and I would like to thank all attendees to our http://cfp.devoxx.fr/2017/talk/UKK-0693/Architecture_par_la_pratique:_patterns_d%E2%80%99utilisation_de_systemes_in-memory_-_WD-40_entre_vos_donnees_et_vos_applis[in-memory data grids patterns] talk. The room was full and we thoroughly enjoyed the experience!"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:28
msgid "During the talk we presented a couple of small demos that showcased some in-memory data grid use cases. The demos are located https://github.com/galderz/datagrid-patterns[here], but I thought it'd be useful to provide some https://github.com/galderz/datagrid-patterns[step-by-step] here so that you can get them running as quickly as possible."
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:31
msgid "Before we start with any of the demos, it's necessary to run some set up steps:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:33
msgid "  1. Check out git repository:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:35
msgid "    git clone https://github.com/galderz/datagrid-patterns"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:39
msgid "  2. Download http://downloads.jboss.org/infinispan/9.0.0.Final/infinispan-server-9.0.0.Final-bin.zip[Infinispan Server 9.0.0.Final] and at the same level as the git repository."
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:42
msgid "  3. Go into the datagrid-patterns directory, start the servers and wait until they've started:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:45
msgid "    cd datagrid-patterns     ./run-servers.sh"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:48
msgid "  4. Install https://www.continuum.io/downloads[Anaconda for Python 3], this is required to run Jupyter notebook for plotting."
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:50
msgid "  5. Install https://maven.apache.org/download.cgi[Maven 3]."
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:53
msgid "Once the set up is complete, it's time to start with the individual demos."
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:58
msgid "Both demos shown below work with the same application domain: rail transport systems. In this domain, we differentiate between physical stations, trains, station boards which are located in stations, and finally stops, which are individual entries in station boards."
msgstr ""

#. type: Title ===
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:60
#, no-wrap
msgid "Analytics Demo"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:66
msgid "The first demo is focused on how you can use Infinispan for doing offline analytics. In particular, this demo tries to answer the following question:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:69
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:165
msgid "_Q. What is the time of the day when there is the biggest ratio of delayed trains?_"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:79
msgid "To answer this question, Infinispan data grid will be loaded with 3 weeks worth of data from station boards. Once the data is loaded, we will execute a remote server task which will use http://infinispan.org/docs/stable/user_guide/user_guide.html#streams[Infinispan Distributed Java Streams] to calculate the two pieces of information required to answer the question: per hour, how many trains are going through the system, and out of those, how many are delayed."
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:89
msgid "An important aspect to bear in mind about this server tasks is that it will only be executed in one of the nodes in the cluster. It does not matter which one. In turn, this node will will ship the lambdas required to do the computation to each of the nodes so that they can executed against their local data. The other nodes will reply with the results and the node where the server task was invoked will aggregate the results."
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:96
msgid "Then, these results are sent back to the client, which in turn, stores the results as JSON in an intermediate cache. Once the results are in place, we will use a Jupyter notebook to read those results and plot the result."
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:100
msgid "Let's see these steps in action:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:105
msgid "  1. First, we need to install the server tasks in the running servers above:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:109
msgid "    cd datagrid-patterns/analytics"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:111
msgid "    mvn clean install package -am -pl analytics-server"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:113
msgid "    mvn wildfly:deploy -pl analytics-server"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:115
msgid "    "
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:120
msgid "  2. Open the datagrid-pattern repo with your favourite IDE and run *delays.java.stream.InjectApp* class located in analytics/analytics-server project. This command will inject the data into the cache. On my environment, it takes between 1 and 2 minutes."
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:127
msgid "  3. With the data loaded, we need to run the remote task that will calculate the total number of trains per hour and how many of those are delayed. To do that, execute *delays.java.stream.AnalyticsApp* class located in analytics/analytics-server project from your IDE."
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:132
msgid "  4. You can verify that the results have been calculating by going to the following address:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:136
msgid "    http://localhost:8180/rest/analytics-results/results"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:140
msgid "  5. With the results in place, it's time to start the Jupyter notebook:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:144
msgid "    cd datagrid-patterns/analytics/analytics-jupyter"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:146
msgid "    ~/anaconda/bin/jupyter notebook"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:152
msgid "  6. Once the notebook opens, click open *live-demo.ipynb* notebook and execute each of the cells in order. You should end up seeing a plot like this:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:156
msgid "https://1.bp.blogspot.com/-0WwGpCjfU1g/WOdG4rNJ8QI/AAAAAAAAE10/L0bV9eq8RZgIDw-C51UyukbZRuZJUyPCQCLcB/s1600/Screen%2BShot%2B2017-04-07%2Bat%2B09.58.56.png[image:https://1.bp.blogspot.com/-0WwGpCjfU1g/WOdG4rNJ8QI/AAAAAAAAE10/L0bV9eq8RZgIDw-C51UyukbZRuZJUyPCQCLcB/s320/Screen%2BShot%2B2017-04-07%2Bat%2B09.58.56.png[image,width=320,height=240]]"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:160
msgid "So, the answer to the question:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:170
msgid "is *2am*! That's because last connecting trains of the day wait for each other to avoid leaving passengers stranded."
msgstr ""

#. type: Title ===
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:173
#, no-wrap
msgid "Real Time Demo"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:182
msgid "The second demo that we presented uses the same application domain as above, but this time we're trying to use our data grid as a way of storing the station board state of each station at a given point in time. So, the idea is to use Infinispan as an in memory data grids for working with real time data."
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:192
msgid "So, what can we do with this type of data? In our demo, we will create a centralised dashboard of delayed trains around the country. To do that, we will take advantage of http://infinispan.org/docs/stable/user_guide/user_guide.html#query.continuous[Infinispan's Continuous Query] functionality which allows us to find those station boards which contain stops that are delayed, and as new delayed trains appeared these will be pushed to our dashboard."
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:197
msgid "To run this demo, keep the same servers running as above and do the following:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:204
msgid "Run *delays.query.continuous.FxApp* application located in real-time project inside the datagrid-patterns demo. This app will inject some live station board data and will launch a JavaFX dashboard that shows delayed trains as they appear. It should look something like this:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:208
msgid "https://2.bp.blogspot.com/-vyFHhzmswQg/WOdJ1PnoOJI/AAAAAAAAE2A/Ui1YS1T93JIxPKpwbS6u0p1whsok3nxfwCLcB/s1600/Screen%2BShot%2B2017-04-07%2Bat%2B10.11.40.png[image:https://2.bp.blogspot.com/-vyFHhzmswQg/WOdJ1PnoOJI/AAAAAAAAE2A/Ui1YS1T93JIxPKpwbS6u0p1whsok3nxfwCLcB/s320/Screen%2BShot%2B2017-04-07%2Bat%2B10.11.40.png[image,width=320,height=248]]"
msgstr ""

#. type: Title ===
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:213
#, no-wrap
msgid "Conclusion"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:220
msgid "This has been a summary of the demos that we run in our talk at Devoxx France with the intention of getting you running these demos as quickly as possible. The repository contains more detailed information of these demos. If there's anything unclear or any of the instructions above are not working, please let us know!"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:227
msgid "Thanks to Emmanuel Bernard for partnering with me for this Devoxx France talk and for the continuous feedback while developing the demos. Thanks as well to Tristan Tarrant for the input in the demos and many thanks to all Devoxx France attendees who attended our talk :)"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:235
msgid "A very special thanks to *Alexandre Masselot* whose https://www.slideshare.net/alexmass/swiss-transport-in-real-time-tribulations-in-the-big-data-stack[\"Swiss Transport in Real Time: Tribulations in the Big] Data Stack\" talk at Soft-Shake 2016 was the inspiration for these demos. @Alex, thanks a lot for sharing the demos and data with me and the rest of the community!!"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:241
msgid "In a just a few weeks I'll be at http://www.developermarch.com/developersummit/[Great Indian Developer Summit] presenting these demos and much more! Stay tuned :)"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:245
msgid "Cheers,"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-04-07-in-memory-data-grid-patterns-demos-from.adoc:246
msgid "Galder"
msgstr ""
