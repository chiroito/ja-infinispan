# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-02-11 23:24+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: upstream/_posts/2016-12-06-distributed-stream-quality-of-life.adoc:1
#, no-wrap
msgid "---\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-12-06-distributed-stream-quality-of-life.adoc:10
#, no-wrap
msgid ""
"layout: blog\n"
"title: Distributed Stream Quality of Life Improvements\n"
"permalink: /blog/:year/:month/:day/distributed-stream-quality-of-life\n"
"date: '2016-12-06T11:54:00.000-08:00'\n"
"author: wburns\n"
"tags: [ \"streams\" ]\n"
"blogger_id: tag:blogger.com,1999:blog-5717179571414330874.post-7859244941475556914\n"
"blogger_orig_url: https://blog.infinispan.org/2016/12/distributed-stream-quality-of-life.html\n"
"---\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-12-06-distributed-stream-quality-of-life.adoc:18
msgid "As I hope most people reading this already know, since Infinispan 8 you can utilize the entire Java 8 Stream API and have it be distributed across your cluster.  This performs the various intermediate and terminal operations on the data local to the node it lives on, providing for extreme performance.  There are some limitations and things to know as was explained at http://blog.infinispan.org/2015/09/distributed-streams.html[distributed-streams]."
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-12-06-distributed-stream-quality-of-life.adoc:22
msgid "The problem with the API up to now was that, if you wanted to use lambdas, it was quite an ugly scene.  Take for example the following code snippet:"
msgstr ""

#. type: Title ==
#: upstream/_posts/2016-12-06-distributed-stream-quality-of-life.adoc:24
#, no-wrap
msgid "8.0 Distributed Streams Example"
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-12-06-distributed-stream-quality-of-life.adoc:28
msgid "However, for Infinispan 9 we utilize a little syntax feature added with Java 8"
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-12-06-distributed-stream-quality-of-life.adoc:37
msgid "to add some much needed quality of life improvements.  This allows the most specific interface to be chosen when a method is overloaded.  This allows for a neat interaction when we add some new interfaces that implement Serializable and the various function interfaces (SerializableFunction, SerializablePredicate, SerializableSupplier, etc).  All of the Stream methods have been overridden on the https://docs.jboss.org/infinispan/9.0/apidocs/org/infinispan/CacheStream.html[CacheStream] interface to take these arguments."
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-12-06-distributed-stream-quality-of-life.adoc:39
msgid "This allows for the code to be much cleaner as we can see here:"
msgstr ""

#. type: Title ==
#: upstream/_posts/2016-12-06-distributed-stream-quality-of-life.adoc:40
#, no-wrap
msgid "9.0 Distributed Streams Example"
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-12-06-distributed-stream-quality-of-life.adoc:43
msgid "Extra Methods"
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-12-06-distributed-stream-quality-of-life.adoc:54
msgid "This is not the only benefit of providing the *CacheStream* interface: we can also provide new methods that aren't available on the standard https://docs.oracle.com/javase/8/docs/api/?java/util/stream/Stream.html[Stream] interface.  One example is the https://docs.jboss.org/infinispan/9.0/apidocs/org/infinispan/CacheStream.html#forEach-org.infinispan.util.function.SerializableBiConsumer-[forEach] method which allows the user to more easily provide a Cache that is injected on each node as required.  This way you don't have to use the clumsy https://docs.jboss.org/infinispan/9.0/apidocs/org/infinispan/stream/CacheAware.html[CacheAware] interface and can directly use lambdas as desired."
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-12-06-distributed-stream-quality-of-life.adoc:56
msgid "Here is an example of the new *forEach* method in action:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-12-06-distributed-stream-quality-of-life.adoc:61
msgid "In this example we take a cache and, based on the keys in it, write those values into another cache. Since *forEach* doesn't have to be side effect free, you can do whatever you want inside here."
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-12-06-distributed-stream-quality-of-life.adoc:65
msgid "All in all these improvements should make using Distributed Streams with Infinispan much easier.  The extra methods could be extended further if users have use cases they would love to suggest.  Just let us know, and I hope you enjoy using Infinispan!"
msgstr ""
