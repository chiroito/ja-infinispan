# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-02-11 23:24+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: upstream/_posts/2015-10-26-expiration-enhancements.adoc:1
#, no-wrap
msgid "---\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2015-10-26-expiration-enhancements.adoc:10
#, no-wrap
msgid ""
"layout: blog\n"
"title: Expiration Enhancements\n"
"permalink: /blog/:year/:month/:day/expiration-enhancements\n"
"date: '2015-10-26T08:34:00.000-07:00'\n"
"author: infinispan\n"
"tags: []\n"
"blogger_id: tag:blogger.com,1999:blog-5717179571414330874.post-5108391745247132049\n"
"blogger_orig_url: https://blog.infinispan.org/2015/10/expiration-enhancements.html\n"
"---\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2015-10-26-expiration-enhancements.adoc:14
msgid "Infinispan has supported expiration now for quite some time.  However there have always been some nuances with how it operated, and with this latest wave of enhancements, we hope that they are mostly covered."
msgstr ""

#. type: Title ==
#: upstream/_posts/2015-10-26-expiration-enhancements.adoc:16
#, no-wrap
msgid "Existing Behaviours"
msgstr ""

#. type: Plain text
#: upstream/_posts/2015-10-26-expiration-enhancements.adoc:21
msgid "The following describe how expiration works in certain circumstances with Infinispan 7 or older."
msgstr ""

#. type: Title ===
#: upstream/_posts/2015-10-26-expiration-enhancements.adoc:23
#: upstream/_posts/2015-10-26-expiration-enhancements.adoc:98
#, no-wrap
msgid "Max Idle"
msgstr ""

#. type: Plain text
#: upstream/_posts/2015-10-26-expiration-enhancements.adoc:30
msgid "Max Idle, I would say is the black sheep of clustered expiration.  It works great with a single node, but if you have a cluster where a key is accessed on different nodes the recent access time is not in sync.  When a clustered cache is used with max idle this can make some nodes contain data and some others to not, it can be a bit confusing."
msgstr ""

#. type: Title ===
#: upstream/_posts/2015-10-26-expiration-enhancements.adoc:32
#, no-wrap
msgid "Single node expiration"
msgstr ""

#. type: Plain text
#: upstream/_posts/2015-10-26-expiration-enhancements.adoc:39
msgid "Expiration has only ever took place on a per node basis.  That is that the entry is only removed from a node when it has that key accessed or the reaper thread finds it.  This means that the different nodes can have different amount of entries (although expired entries - don't show up)."
msgstr ""

#. type: Title ===
#: upstream/_posts/2015-10-26-expiration-enhancements.adoc:41
#, no-wrap
msgid "Expiration Event?"
msgstr ""

#. type: Plain text
#: upstream/_posts/2015-10-26-expiration-enhancements.adoc:48
msgid "When an entry expires it should raise an expiration event, correct?  Infinispan didn't have such an event, instead an invalidation event was raised.  This could be for obvious reasons a bit confusing.  The worst part is that the event is raised on each node at possibly different times since the entries aren't removed at approximately the same time."
msgstr ""

#. type: Title ==
#: upstream/_posts/2015-10-26-expiration-enhancements.adoc:50
#, no-wrap
msgid "New Enhancements"
msgstr ""

#. type: Plain text
#: upstream/_posts/2015-10-26-expiration-enhancements.adoc:55
msgid "The following are new enhancements added with Infinispan 8 to allow for better handling of entries expiring."
msgstr ""

#. type: Title ===
#: upstream/_posts/2015-10-26-expiration-enhancements.adoc:57
#, no-wrap
msgid "Cluster wide expiration "
msgstr ""

#. type: Plain text
#: upstream/_posts/2015-10-26-expiration-enhancements.adoc:61
msgid "When an entry in a replicated or distributed cache expires it will now expire that entry across the entire cluster at once."
msgstr ""

#. type: Plain text
#: upstream/_posts/2015-10-26-expiration-enhancements.adoc:69
msgid "When an entry expires on one node (either by access or reaper thread)  that node will asynchronously send a remove expired command.  This command runs just like a remove except it has some conditional values such as checking for the lifespan and value to make sure they match before actually removing the entry.  This is to prevent a concurrent write from being overwritten.  This then ensures that the entry is removed from all nodes at approximately the same time."
msgstr ""

#. type: Plain text
#: upstream/_posts/2015-10-26-expiration-enhancements.adoc:79
msgid "Unfortunately cluster wide expiration is not as safe when an entry expires from a store and it wasn't in memory.  In very rare circumstances, it can overwrite a concurrent update.  This case is very rare because entries only expire from a store when the reaper thread runs, you would then have to have a concurrent put at the precise moment the reaper thread is expiring that entry.  This is because the API for cache store expiration only exposes the key and doesn't include the value or metadata.  This is planned to be enhanced hopefully somewhat soon though!"
msgstr ""

#. type: Title ===
#: upstream/_posts/2015-10-26-expiration-enhancements.adoc:81
#, no-wrap
msgid "Yes, Expiration Events!"
msgstr ""

#. type: Plain text
#: upstream/_posts/2015-10-26-expiration-enhancements.adoc:89
msgid "Infinispan also has added a new event, https://docs.jboss.org/infinispan/8.0/apidocs/org/infinispan/notifications/cachelistener/event/CacheEntryExpiredEvent.html[CacheEntryExpired].  This is fired whenever an entry expires or is removed due to a cluster wide expiration.  Note in the latter case, the event is raised across the entire cluster at the same time, which also includes only receiving a cluster expiration event."
msgstr ""

#. type: Plain text
#: upstream/_posts/2015-10-26-expiration-enhancements.adoc:92
msgid "Also there was a bug here where the event was only raised for store expirations, in memory expirations never even raised an event, doh!"
msgstr ""

#. type: Title ==
#: upstream/_posts/2015-10-26-expiration-enhancements.adoc:94
#, no-wrap
msgid "Unchanged"
msgstr ""

#. type: Plain text
#: upstream/_posts/2015-10-26-expiration-enhancements.adoc:106
msgid "Unfortunately, max idle is unchanged in the latest enhancements.  Implementing a correct max idle is a very network costly operation as you would have to send updates to other nodes.  Instead it is highly recommended to not use max idle in a clustered cache as it can cause unexpected behaviour (where an entry may expire early even though it was accessed recently)."
msgstr ""

#. type: Title ==
#: upstream/_posts/2015-10-26-expiration-enhancements.adoc:108
#, no-wrap
msgid "Other Remarks"
msgstr ""

#. type: Title ===
#: upstream/_posts/2015-10-26-expiration-enhancements.adoc:112
#, no-wrap
msgid "Concurrent expiration access"
msgstr ""

#. type: Plain text
#: upstream/_posts/2015-10-26-expiration-enhancements.adoc:119
msgid "There is an interesting case when using a clustered cache and you have an expired entry.  If that entry is read from multiple nodes at the same time it can cause more than 1 expiration event to occur.  If this does occur the first event will contain the value (if applicable) and any others will show a null value."
msgstr ""

#. type: Title ===
#: upstream/_posts/2015-10-26-expiration-enhancements.adoc:121
#, no-wrap
msgid "What do I need to change?"
msgstr ""

#. type: Plain text
#: upstream/_posts/2015-10-26-expiration-enhancements.adoc:127
msgid "The new expiration changes come along for free, no configuration etc.  required.  However if you were listening to cache entry invalidation events for entries expiring you should change your Listener to use the new annotation.  Other than that everything should just work!"
msgstr ""

#. type: Title ===
#: upstream/_posts/2015-10-26-expiration-enhancements.adoc:129
#, no-wrap
msgid "I have a question or concern"
msgstr ""

#. type: Plain text
#: upstream/_posts/2015-10-26-expiration-enhancements.adoc:132
msgid "If you have any questions or concerns please get in contact with http://infinispan.org/getinvolved/[us]!"
msgstr ""
