# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-02-11 23:24+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: upstream/_posts/2017-03-10-jdbc-migrator-or-how-i-learned-to-stop.adoc:1
#, no-wrap
msgid "---\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-03-10-jdbc-migrator-or-how-i-learned-to-stop.adoc:11
#, no-wrap
msgid ""
"layout: blog\n"
"title: 'JDBC Migrator or: How I Learned to Stop Worrying About Buckets and Utilise\n"
"permalink: /blog/:year/:month/:day/jdbc-migrator-or-how-i-learned-to-stop\n"
"  the JdbcStringBasedStore!'\n"
"date: '2017-03-10T02:27:00.000-08:00'\n"
"author: remerson\n"
"tags: [ \"jdbc\", \"cache stores\", \"migration\" ]\n"
"blogger_id: tag:blogger.com,1999:blog-5717179571414330874.post-8580712697275598944\n"
"blogger_orig_url: https://blog.infinispan.org/2017/03/jdbc-migrator-or-how-i-learned-to-stop.html\n"
"---\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-03-10-jdbc-migrator-or-how-i-learned-to-stop.adoc:19
msgid "Infinispan 9 has introduced many improvements to its marshalling codebase in order to improve performance and allow for greater flexibility. Consequently, data marshalled and persisted by Infinispan 8.x is no longer compatible with Infinispan 9.x. Furthermore, as part of our ongoing efforts to improve the cache stores provided by Infinispan, we have removed both the JdbcBinaryStore and JdbcMixedStore in Infinispan 9.0."
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-03-10-jdbc-migrator-or-how-i-learned-to-stop.adoc:23
msgid "To assist users migrating from Infinispan 8.x, we have created the JDBC Migrator that enables existing JDBC stores to be migrated to Infinispan 9's JdbcStringBasedStore."
msgstr ""

#. type: Title ==
#: upstream/_posts/2017-03-10-jdbc-migrator-or-how-i-learned-to-stop.adoc:26
#, no-wrap
msgid "No More Binary Keyed Stores!"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-03-10-jdbc-migrator-or-how-i-learned-to-stop.adoc:39
msgid "The original intention of the JdbcBinaryStore was to provide greater flexibility over the JdbcStringBasedStore as it did not require a Key2StringMapper implementation.  This was achieved by utilising the hashcode of an entries key for a table's ID column entry.  However, due to the possibility of hash collisions all entries had to be placed inside a Bucket object which was then serialised and inserted into the underlying table. Utilising buckets in this manner was far from optimal as each read/write to the underlying table required an existing bucket for a given hash to be retrieved, deserialised, updated, serialised and then re-inserted back into the db."
msgstr ""

#. type: Title ==
#: upstream/_posts/2017-03-10-jdbc-migrator-or-how-i-learned-to-stop.adoc:42
#, no-wrap
msgid "Introducing JDBC Migrator"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-03-10-jdbc-migrator-or-how-i-learned-to-stop.adoc:52
msgid "The JDBCMigrator is a standalone application that takes a single argument, the path to a .properties file which must contain the configuration properties for both the source and target stores.  To use the migrator you need the infinispan-tools-9.x.jar, as well as the jdbc drivers required by your source and target databases, on your classpath."
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-03-10-jdbc-migrator-or-how-i-learned-to-stop.adoc:55
msgid "An example maven pom that launches the migrator via mvn exec:java is presented below:"
msgstr ""

#. type: Title ===
#: upstream/_posts/2017-03-10-jdbc-migrator-or-how-i-learned-to-stop.adoc:60
#, no-wrap
msgid "Migration Examples"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-03-10-jdbc-migrator-or-how-i-learned-to-stop.adoc:68
msgid "Below are several example .properties files used for migrating various stores, however an exhaustive list of all available properties can be found in the http://infinispan.org/docs/9.0.x/user_guide/user_guide.html#jdbc_migrator[Infinispan user guide].  "
msgstr ""

#. type: Bullet: '*
#. type: '
#: upstream/_posts/2017-03-10-jdbc-migrator-or-how-i-learned-to-stop.adoc:71
msgid "*"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-03-10-jdbc-migrator-or-how-i-learned-to-stop.adoc:76
#, no-wrap
msgid ""
"*Before attempting to migrate your existing stores please ensure you\n"
"have backed up your database!*\n"
"*\n"
"*\n"
msgstr ""

#. type: Title ====
#: upstream/_posts/2017-03-10-jdbc-migrator-or-how-i-learned-to-stop.adoc:77
#, no-wrap
msgid "8.x JdbcBinaryStore -> 9.x JdbcStringBasedStore"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-03-10-jdbc-migrator-or-how-i-learned-to-stop.adoc:85
msgid "The most important property to set in this example is \"source.marshaller.type=LEGACY\" as this instructs the migrator to utilise the Infinispan 8.x marshaller to unmarshall data stored in your existing DB tables. "
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-03-10-jdbc-migrator-or-how-i-learned-to-stop.adoc:97
msgid "If you specified custom AdvancedExternalizer implementations in your Infinispan 8.x configuration, then it is necessary for you to specify these in the migrator configuration and ensure that they are available on the migrators classpath.  To Specify the AdvancedExternalizers to load, it is necessary to define the \"source.marshaller.externalizers\" property with a comma-separated list of class names. If an ID was explicitly set for your externalizer, then it is possible to prepend the externalizers class name with \"<id>:\" to ensure the IDs is respected by the marshaller. "
msgstr ""

#. type: Title ====
#: upstream/_posts/2017-03-10-jdbc-migrator-or-how-i-learned-to-stop.adoc:104
#, no-wrap
msgid "TwoWayKey2StringMapper Migration"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-03-10-jdbc-migrator-or-how-i-learned-to-stop.adoc:111
msgid "As well as using the JDBC Migrator to migrate from Infinispan 8.x, it is also possible to utilise it to migrate from one DB dialect to another or to migrate from one TwoWayKey2StringMapper implementation to another. "
msgstr ""

#. type: Title ===
#: upstream/_posts/2017-03-10-jdbc-migrator-or-how-i-learned-to-stop.adoc:118
#, no-wrap
msgid "Summary"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-03-10-jdbc-migrator-or-how-i-learned-to-stop.adoc:128
msgid "Infinispan 9 stores are no longer compatible with Infinispan 8.x stores due to internal marshalling changes. Furthermore, the JdbcBinary and JdbcMixed stores have been removed due to their poor performance characteristics.  To aid users in their transition from Infinispan 8.x we have created the JDBC Migrator to enable users to migrate their existing JDBC stores."
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-03-10-jdbc-migrator-or-how-i-learned-to-stop.adoc:132
msgid "If you're a user of the JDBC stores and have any feedback on the latest changes, let us know via the forum, issue tracker or the #infinispan channel on Freenode. "
msgstr ""
