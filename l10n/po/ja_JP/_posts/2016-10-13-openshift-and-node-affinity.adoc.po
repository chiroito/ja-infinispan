# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-02-11 23:24+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: upstream/_posts/2016-10-13-openshift-and-node-affinity.adoc:1
#, no-wrap
msgid "---\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-10-13-openshift-and-node-affinity.adoc:12
#, no-wrap
msgid ""
"layout: blog\n"
"title: OpenShift and Node Affinity\n"
"permalink: /blog/:year/:month/:day/openshift-and-node-affinity\n"
"date: '2016-10-13T06:40:00.000-07:00'\n"
"author: slaskawiec\n"
"tags: [ \"openshift\",\n"
"\"affinity\",\n"
"]\n"
"blogger_id: tag:blogger.com,1999:blog-5717179571414330874.post-3808154661837147870\n"
"blogger_orig_url: https://blog.infinispan.org/2016/10/openshift-and-node-affinity.html\n"
"---\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-10-13-openshift-and-node-affinity.adoc:18
msgid "OpenShift (and Kubernetes) has a great feature called https://docs.openshift.org/latest/admin_guide/scheduler.html#affinity[Affinity].  In some scenarios, it might be beneficial to configure it along with http://infinispan.org/docs/stable/user_guide/user_guide.html#ServerHinting[Infinispan node affinity]."
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-10-13-openshift-and-node-affinity.adoc:25
msgid "Before we start... this tutorial is heavily based on our http://blog.infinispan.org/2016/08/running-infinispan-cluster-on-openshift.html[previous blog post about deploying Infinispan on Openshift] and OpenShift https://docs.openshift.org/latest/admin_guide/scheduler.html[Scheduler functionality]. It is highly recommended to read those articles before continuing this tutorial."
msgstr ""

#. type: Title ==
#: upstream/_posts/2016-10-13-openshift-and-node-affinity.adoc:26
#, no-wrap
msgid "How does the Affinity feature work... in short?"
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-10-13-openshift-and-node-affinity.adoc:36
msgid "In order to decide on which node given Pod should be running, OpenShift looks at so called https://docs.openshift.org/latest/admin_guide/scheduler.html#configurable-predicates[Predicates] and https://docs.openshift.org/latest/admin_guide/scheduler.html#available-priority-functions[Priority Functions]. A predicate must match the one configured in _DeploymentConfiguration_ and Priority Function is responsible for choosing the best node for running Pods."
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-10-13-openshift-and-node-affinity.adoc:44
msgid "Let's assume that we have a sample policy (similar to https://docs.openshift.org/latest/admin_guide/scheduler.html#scheduler-sample-policies[one provided in OpenShift manual]), that uses _site_ as a Predicate along with _rack and machine_ as Priority Functions. Now let's assume we have two nodes:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-10-13-openshift-and-node-affinity.adoc:46
msgid "Node 1 - site=EU, rack=R1, machine=VM1"
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-10-13-openshift-and-node-affinity.adoc:47
msgid "Node 2 - site=US, rack=R2, machine=VM2"
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-10-13-openshift-and-node-affinity.adoc:51
msgid "And two DeploymentConfiguration with Node Selectors (this tells OpenShift on which nodes given _DeploymentConfiguration_ wishes to run)  defined as follows:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-10-13-openshift-and-node-affinity.adoc:53
msgid "DeploymentConfiguration 1 - site=EU, rack=R5, machine=VM5"
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-10-13-openshift-and-node-affinity.adoc:54
msgid "DeploymentConfiguration 2 - site=JAP, rack=R5, machine=VM5"
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-10-13-openshift-and-node-affinity.adoc:58
msgid "With the above example only DeploymentConfiguration 1 will be scheduled (on Node 1), since _site_ matches the predicate. In this case _rack_ and _machine_ parameters are not used (because we have only one node)."
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-10-13-openshift-and-node-affinity.adoc:66
msgid "Note that the default OpenShift's configuration uses _region_ (as a Predicate) and _zone_ (as a Priority Function). However it can be reconfigured https://docs.openshift.org/latest/admin_guide/scheduler.html[very easily]. "
msgstr ""

#. type: Title ==
#: upstream/_posts/2016-10-13-openshift-and-node-affinity.adoc:71
#, no-wrap
msgid "And I need it because...."
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-10-13-openshift-and-node-affinity.adoc:79
msgid "Some OpenShift deployments might span multiple racks in a data center or even multiple sites. It is important to tell Infinispan where physical machines are located, which will allow to choose better nodes for backing up your data (in distribution mode). "
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-10-13-openshift-and-node-affinity.adoc:84
msgid "As the matter of fact, Infinispan uses _site_, _rack_ and _machine_. The main goal is to avoid backing up data on the same host__.__"
msgstr ""

#. type: Title ===
#: upstream/_posts/2016-10-13-openshift-and-node-affinity.adoc:89
#, no-wrap
msgid "The implementation"
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-10-13-openshift-and-node-affinity.adoc:95
msgid "The implementation is pretty straightforward but there are several gotchas. "
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-10-13-openshift-and-node-affinity.adoc:104
msgid "The first one is that OpenShift uses _regions_ and _zones_ by default and Infinispan uses _sites_, _racks_ and _machines_. The good news is that all those three are optional, so you have two options - reuse existing _region_ and _zone_ (map them to rack and site for example)_,_ or adjust OpenShift scheduler settings. In my example I used the former approach."
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-10-13-openshift-and-node-affinity.adoc:111
msgid "The second one is the need of hardcoding those parameters into _DeploymentConfiguration_. Unfortunately Node Selectors are not exposed through http://kubernetes.io/docs/user-guide/downward-api/[Downward API], so there's no other way."
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-10-13-openshift-and-node-affinity.adoc:115
msgid "So let's have a look at our DeploymentConfiguration:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-10-13-openshift-and-node-affinity.adoc:119
msgid "Line 26 - Zone _default_ used as a rack"
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-10-13-openshift-and-node-affinity.adoc:120
msgid "Line 27 - Region _primary_ used as a site"
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-10-13-openshift-and-node-affinity.adoc:121
msgid "Lines 57 - 59 - Node Selector for scheduling Pods"
msgstr ""

#. type: Title ===
#: upstream/_posts/2016-10-13-openshift-and-node-affinity.adoc:126
#, no-wrap
msgid "Conclusion"
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-10-13-openshift-and-node-affinity.adoc:135
msgid "Combining OpenShift Affinity Service and Infinispan Server Hinting allows to optimize data distribution across the cluster. Keep in mind that your configuration might be totally different (OpenShift Scheduler is a highly configurable thing). But once you understand how it works, you can adjust the hinting strategy for your needs. "
msgstr ""

#. type: Plain text
#: upstream/_posts/2016-10-13-openshift-and-node-affinity.adoc:138
msgid "Happy Scaling!"
msgstr ""
