# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-02-11 23:24+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: upstream/_posts/2011-10-03-transaction-remake-in-infinispan-51.adoc:1
#, no-wrap, fuzzy
msgid "---\n"
msgstr "---\n"

#. type: Plain text
#: upstream/_posts/2011-10-03-transaction-remake-in-infinispan-51.adoc:10
#, fuzzy
msgid ""
"layout: blog title: Transaction remake in Infinispan 5.1 permalink: /blog/:"
"year/:month/:day/transaction-remake-in-infinispan-51 date: '2011-10-03T10:32:"
"00.000-07:00' author: mmarkus tags: [ \"transactions\", \"locking\", "
"\"deadlock detection\","
msgstr ""
"layout: ブログタイトル。トランザクションリメイク in Infinispan 5.1 パーマリンク./blog/:year/:month/:"
"day/transaction-remake-infinispan-51 date: '2011-10-03T10:32:00.000-07:00' "
"author: mmarkus tags.[ \" トランザクション\", \"ロック\", \"デッドロック検出\"."

#. type: Plain text
#: upstream/_posts/2011-10-03-transaction-remake-in-infinispan-51.adoc:15
#, no-wrap, fuzzy
msgid ""
"\"performance\",\n"
"]\n"
"blogger_id: tag:blogger.com,1999:blog-5717179571414330874.post-"
"3726929761213348534\n"
"blogger_orig_url: https://blog.infinispan.org/2011/10/transaction-remake-in-"
"infinispan-51.html\n"
"---\n"
msgstr ""
"\"performance\", ] blogger_id: tag:blogger.com,1999:blog-5717179571414330874."
"post-3726929761213348534 blogger_orig_url: https://blog.infinispan.org/2011/"
"10/transaction-remake-in-infinispan-51.html ---"

#. type: Plain text
#: upstream/_posts/2011-10-03-transaction-remake-in-infinispan-51.adoc:19
#, fuzzy
msgid ""
"If you ever used Infinispan in a transactional way you might be very "
"interested in this article as it describes some very significant "
"improvements in version 5.1 \"Brahma\" (released with 5.1.Beta1):"
msgstr "Infinispanをトランザクション的に使用したことがある方は、この記事に興味があるかもしれません。"

#. type: Plain text
#: upstream/_posts/2011-10-03-transaction-remake-in-infinispan-51.adoc:28
#, fuzzy
msgid ""
"starting with this release an Infinispan cache can accessed either "
"transactionally or non-transactionally. The mixed access mode is no longer "
"supported (backward compatibility still maintained, see below).  There are "
"http://www.cis.upenn.edu/acg/papers/cal06_atomic_semantics.pdf[several "
"reasons] for going this path, but one of them most important result of this "
"decision is a cleaner semantic on how concurrency is managed between "
"multiple requestors for the same cache entry."
msgstr ""
"このリリースでは、Infinispan "
"キャッシュはトランザクションまたは非トランザクションのどちらでもアクセスできます。混合アクセスモードはサポートされなくなりました（下位互換性は維持されています。この道を選んだ理由は "
"link:http://www.cis.upenn.edu/acg/papers/cal06_atomic_semantics.pdf[いくつか] "
"ありますが、この決定の最も重要な結果の一つは、同じキャッシュエントリに対する複数のリクエスター間での同時実行の管理方法について、より明確な意味合いを持つようになったことです。"

#. type: Plain text
#: upstream/_posts/2011-10-03-transaction-remake-in-infinispan-51.adoc:35
#, fuzzy
msgid ""
"starting with 5.1 the supported transaction models are *optimistic* and "
"*pessimistic*. Optimistic model is an improvement over the existing default "
"transaction model by completely deferring lock acquisition to transaction "
"prepare time. That reduces lock acquisition duration and increases "
"throughput; also avoids deadlocks. With pessimistic model, cluster wide-"
"locks are being acquired on each write and only being released after the "
"transaction completed (see below)."
msgstr ""
"5.1 以降、サポートされているトランザクションモデルは *楽観* 的と悲観 *的で* "
"ある。オプティミスティックモデルは、ロック取得をトランザクションの準備時間まで完全に延期することで、既存のデフォルトのトランザクションモデルを改良したものです。これによりロック取得時間が短縮され、スループットが向上し、デッドロックも回避されます。悲観的モデルでは、クラスタワイドロックは書き込みごとに取得され、トランザクションが完了した後にのみ解放されます "
"(後述)。"

#. type: Title ==
#: upstream/_posts/2011-10-03-transaction-remake-in-infinispan-51.adoc:38
#, no-wrap, fuzzy
msgid "Transactional or non transactional cache?"
msgstr "トランザクションキャッシュか非トランザクションキャッシュか？"

#. type: Plain text
#: upstream/_posts/2011-10-03-transaction-remake-in-infinispan-51.adoc:45
#, fuzzy
msgid ""
"It's up to you as an user to decide weather you want to define a cache as "
"transactional or not. By default, infinispan caches are non transactional. A "
"cache can be made transactional by changing the _transactionMode_ attribute:"
msgstr ""
"キャッシュをトランザクションとして定義するかどうかはユーザー次第です。デフォルトでは、infinispan キャッシュは非トランザクション型です。 "
"_transactionMode_ 属性を変更することで、キャッシュをトランザクション型にすることができます。"

#. type: Plain text
#: upstream/_posts/2011-10-03-transaction-remake-in-infinispan-51.adoc:49
#, fuzzy
msgid ""
"_transactionMode_ can only take two values: _TRANSACTIONAL_ and "
"_NON_TRANSACTIONAL_. Same thing can be also achieved programatically:"
msgstr ""
"_transactionModeは_ 2つの値しか取ることができません。 _TRANSACTIONAL_ と _NON_TRANSACTIONAL_ "
"です。同じことをプログラムで実現することもできます。"

#. type: Plain text
#: upstream/_posts/2011-10-03-transaction-remake-in-infinispan-51.adoc:54
#, no-wrap, fuzzy
msgid ""
"**Important:**for transactional caches it is required to\n"
"https://docs.jboss.org/author/x/FAY5[configure a\n"
"TransactionManagerLookup].\n"
msgstr ""
"*重要:* トランザクションキャッシュの場合は、 link:https://docs.jboss.org/author/x/"
"FAY5[TransactionManagerLookupを構成する] 必要があります。"

#. type: Title ==
#: upstream/_posts/2011-10-03-transaction-remake-in-infinispan-51.adoc:56
#, no-wrap, fuzzy
msgid "Backward compatibility"
msgstr "下位互換性"

#. type: Plain text
#: upstream/_posts/2011-10-03-transaction-remake-in-infinispan-51.adoc:70
#, fuzzy
msgid ""
"The _autoCommit_ attribute was added in order to assure backward "
"compatibility. If a cache is transactional and _autoCommit_ is enabled "
"(defaults to true) then any call that is performed outside of a "
"transaction's scope is transparently wrapped within a transaction. In other "
"words Infinispan adds the logic for starting a transaction before the call "
"and committing it after the call.  So if your code accesses a cache both "
"transactionally and non-transactionally, all you have to do when migrating "
"to Infinispan 5.1 is mark the cache as transactional and enable _autoCommit_ "
"(that's actually enabled by default, so just don't disable it :)  The "
"_autoCommit_ feature can be managed through configuration:"
msgstr ""
"_autoCommit_ 属性は下位互換性を保証するために追加されました。キャッシュがトランザクション型で _autoCommit が_ "
"有効になっている場合（デフォルトは "
"true）、トランザクションのスコープ外で実行されるすべての呼び出しは、透過的にトランザクション内でラップされます。言い換えれば、Infinispan "
"は呼び出しの前にトランザクションを開始し、呼び出しの後にコミットするためのロジックを追加します。したがって、コードがトランザクションと非トランザクションの両方でキャッシュにアクセスする場合、Infinispan "
"5.1 に移行する際にすべきことは、キャッシュをトランザクションとしてマークし、 _autoCommit_ _を_ "
"有効にすることです（これはデフォルトで有効になっていますので、無効にしないでください）。"

#. type: Plain text
#: upstream/_posts/2011-10-03-transaction-remake-in-infinispan-51.adoc:73
#: upstream/_posts/2011-10-03-transaction-remake-in-infinispan-51.adoc:89
#: upstream/_posts/2011-10-03-transaction-remake-in-infinispan-51.adoc:110
#, fuzzy
msgid "or programatically:"
msgstr "またはプログラム的に。"

#. type: Title ==
#: upstream/_posts/2011-10-03-transaction-remake-in-infinispan-51.adoc:77
#, no-wrap, fuzzy
msgid "Optimistic Transactions"
msgstr "楽観的な取引"

#. type: Plain text
#: upstream/_posts/2011-10-03-transaction-remake-in-infinispan-51.adoc:86
#, fuzzy
msgid ""
"With optimistic transactions locks are being acquired at transaction prepare "
"time and are only being held up to the point the transaction commits (or "
"rollbacks). This is different from the 5.0 default locking model where local "
"locks are being acquire on writes and cluster locks are being acquired "
"during prepare time.  Optimistic transactions can be enabled in the "
"configuration file:"
msgstr ""
"楽観的なトランザクションでは、ロックはトランザクションの準備時に取得され、トランザクションがコミット（またはロールバック）するまで保持されます。これは5."
"0のデフォルトのロックモデルとは異なり、ローカルロックは書き込み時に取得され、クラスタロックは準備時間中に取得されます。最適化されたトランザクションは設定ファイルで有効にすることができます。"

#. type: Plain text
#: upstream/_posts/2011-10-03-transaction-remake-in-infinispan-51.adoc:92
#, fuzzy
msgid "By default, a transactional cache is optimistic."
msgstr "デフォルトでは、トランザクションキャッシュは楽観的です。"

#. type: Title ==
#: upstream/_posts/2011-10-03-transaction-remake-in-infinispan-51.adoc:94
#, no-wrap, fuzzy
msgid "Pessimistic Transactions"
msgstr "悲観的な取引"

#. type: Plain text
#: upstream/_posts/2011-10-03-transaction-remake-in-infinispan-51.adoc:99
#, fuzzy
msgid ""
"From a lock acquisition perspective, pessimistic transactions obtain locks "
"on keys at the time the key is written. E.g."
msgstr "ロック取得の観点から、悲観的なトランザクションは、鍵の書き込み時に鍵のロックを取得する。例えば"

#. type: Plain text
#: upstream/_posts/2011-10-03-transaction-remake-in-infinispan-51.adoc:105
#, fuzzy
msgid ""
"When _cache.put(k1,v1)_ returns k1 is locked and no other transaction "
"running anywhere in the cluster can write to it. Reading k1 is still "
"possible. The lock on k1 is released when the transaction completes (commits "
"or rollbacks)."
msgstr ""
"_cache.put(k1,v1) が_ 戻ると k1 はロックされており、クラスタ内のどこかで実行されている他のトランザクションは k1 "
"に書き込むことができません。k1 の読み込みはまだ可能です。k1 のロックは、トランザクションが完了 (コミットまたはロールバック) "
"したときに解除されます。"

#. type: Plain text
#: upstream/_posts/2011-10-03-transaction-remake-in-infinispan-51.adoc:107
#, fuzzy
msgid "Pessimistic transactions can be enabled in the configuration file:"
msgstr "悲観的なトランザクションは、設定ファイルで有効にすることができます。"

#. type: Title ==
#: upstream/_posts/2011-10-03-transaction-remake-in-infinispan-51.adoc:114
#, no-wrap, fuzzy
msgid "What do I need - pessimistic or optimistic transactions?"
msgstr "何が必要なのか-悲観的な取引、楽観的な取引？"

#. type: Plain text
#: upstream/_posts/2011-10-03-transaction-remake-in-infinispan-51.adoc:126
#, fuzzy
msgid ""
"From a use case perspective, optimistic transactions should be used when "
"there's not a lot of contention between multiple transactions running at the "
"same time. That is because the optimistic transactions rollback if data has "
"changed between the time it was read and the time it was committed "
"(_writeSkewCheck_).  On the other hand, pessimistic transactions might be a "
"better fit when there is high contention on the keys and transaction "
"rollbacks are less desirable. Pessimistic transactions are more costly by "
"their nature: each write operation potentially involves a RPC for lock "
"acquisition."
msgstr ""
"ユースケースの観点から、楽観的なトランザクションは、同時に実行されている複数のトランザクション間の競合があまりない場合に使用するべきです。なぜなら、楽観的なトランザクションは、データが読み込まれてからコミットされた時点までの間にデータが変更された場合にロールバックするからです "
"_（writeSkewCheck_ "
"）。一方、鍵の競合が多く、トランザクションのロールバックが望ましくない場合は、悲観的なトランザクションの方が適しているかもしれません。悲観的なトランザクションは、その性質上、よりコストがかかる。"

#. type: Title ==
#: upstream/_posts/2011-10-03-transaction-remake-in-infinispan-51.adoc:128
#, no-wrap, fuzzy
msgid "The path ahead"
msgstr "進むべき道"

#. type: Plain text
#: upstream/_posts/2011-10-03-transaction-remake-in-infinispan-51.adoc:133
#, fuzzy
msgid ""
"This major transaction rework has opened the way for several other "
"transaction related improvements:"
msgstr "この主要な取引のリワークは、他のいくつかの取引関連の改善のための道を開きました。"

#. type: Plain text
#: upstream/_posts/2011-10-03-transaction-remake-in-infinispan-51.adoc:139
#, fuzzy
msgid ""
"http://community.jboss.org/wiki/SingleNodeLockingModel[Single node locking "
"model] is a major step forward in avoiding deadlocks and increasing "
"throughput by only acquiring locks on a single node in the cluster, "
"disregarding the number of redundant copies (_numOwners_) on which data is "
"replicated"
msgstr ""
"link:http://community.jboss.org/wiki/SingleNodeLockingModel[シングルノードロックモデルは] "
"、データが複製される冗長コピー _（numOwners_ "
"）の数を無視して、クラスタ内の単一ノードでのみロックを取得することで、デッドロックを回避し、スループットを向上させるための大きな一歩です。"

#. type: Plain text
#: upstream/_posts/2011-10-03-transaction-remake-in-infinispan-51.adoc:142
#, fuzzy
msgid ""
"http://community.jboss.org/wiki/LockReorderingForAvoidingDeadlocks[Lock "
"acquisition reordering] is a deadlock avoidance technique that will be used "
"for optimistic transactions"
msgstr ""
"link:http://community.jboss.org/wiki/"
"LockReorderingForAvoidingDeadlocks[ロック取得再順序化は] "
"、楽観的なトランザクションに使用されるデッドロック回避技術です。"

#. type: Plain text
#: upstream/_posts/2011-10-03-transaction-remake-in-infinispan-51.adoc:144
#, fuzzy
msgid ""
"http://community.jboss.org/wiki/IncrementalOptimisticLocking[Incremental "
"locking] is another technique for minimising deadlocks."
msgstr ""
"link:http://community.jboss.org/wiki/"
"IncrementalOptimisticLocking[インクリメンタル・ロックは] 、デッドロックを最小限に抑えるためのもう一つの手法です。"

#. type: Plain text
#: upstream/_posts/2011-10-03-transaction-remake-in-infinispan-51.adoc:148
#, fuzzy
msgid "Stay tuned! Mircea"
msgstr "ご期待くださいミルチェア"
