# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-02-11 23:24+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: upstream/_posts/2014-03-05-embedded-cluster-listeners-in.adoc:1
#, no-wrap
msgid "---\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2014-03-05-embedded-cluster-listeners-in.adoc:10
#, no-wrap
msgid ""
"layout: blog\n"
"title: Embedded Cluster Listeners in Infinispan 7.0.0.Alpha1\n"
"permalink: /blog/:year/:month/:day/embedded-cluster-listeners-in\n"
"date: '2014-03-05T06:54:00.000-08:00'\n"
"author: infinispan\n"
"tags: [ \" listeners\" ]\n"
"blogger_id: tag:blogger.com,1999:blog-5717179571414330874.post-5744590504523514675\n"
"blogger_orig_url: https://blog.infinispan.org/2014/03/embedded-cluster-listeners-in.html\n"
"---\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2014-03-05-embedded-cluster-listeners-in.adoc:19
msgid "If you are following on the dev listing, you may have seen a https://github.com/infinispan/infinispan/wiki/Clustered-listeners[design doc] come through that details adding support for Clustered Listeners to Infinispan.  This features allows for listeners to be used in a distributed cache configuration.  I am happy to say that this feature is now in http://blog.infinispan.org/2014/02/infinispan-700alpha1-release.html[Infinispan 7.0.0.Alpha1] !"
msgstr ""

#. type: Plain text
#: upstream/_posts/2014-03-05-embedded-cluster-listeners-in.adoc:26
msgid "This feature is needed since local listeners in a distributed cache are only notified of events on the node where the data resides.  Therefore, clustered listeners allow for a single listener to receive any write notification (limited to CacheEntryCreatedEvent, CacheEntryModifiedEvent and CacheEntryRemovedEvent) that occurs in the cluster which is installed on 1 node."
msgstr ""

#. type: Title ====
#: upstream/_posts/2014-03-05-embedded-cluster-listeners-in.adoc:28
#, no-wrap
msgid "Basic Example"
msgstr ""

#. type: Plain text
#: upstream/_posts/2014-03-05-embedded-cluster-listeners-in.adoc:32
msgid "Using a cluster listener is just as easy as a regular listener. Here is a simple use case that stores the events as it receives them."
msgstr ""

#. type: Plain text
#: upstream/_posts/2014-03-05-embedded-cluster-listeners-in.adoc:39
msgid "That is all that is required is just to set the property of your Listener annotated class to say _clustered = true_. There are other important changes in the rest of the document. Please let us know how you like the new cluster listeners ! Also if any issues are found, it is much appreciated to log those to https://issues.jboss.org/browse/ISPN[JIRA]."
msgstr ""

#. type: Title ====
#: upstream/_posts/2014-03-05-embedded-cluster-listeners-in.adoc:41
#, no-wrap
msgid "Differences between Local and Cluster Listeners"
msgstr ""

#. type: Title =====
#: upstream/_posts/2014-03-05-embedded-cluster-listeners-in.adoc:43
#, no-wrap
msgid "Pre and post Notifications"
msgstr ""

#. type: Plain text
#: upstream/_posts/2014-03-05-embedded-cluster-listeners-in.adoc:50
msgid "In a local cluster listener, the listener is notified twice, before the operation is completed and after the entry is updated.  A cluster listener is *ONLY* notified after the operation is completed while still holding locks.  Therefore, the _isPre_ method always returns false in a cluster listener."
msgstr ""

#. type: Title =====
#: upstream/_posts/2014-03-05-embedded-cluster-listeners-in.adoc:51
#, no-wrap
msgid "Transaction begin and completion"
msgstr ""

#. type: Plain text
#: upstream/_posts/2014-03-05-embedded-cluster-listeners-in.adoc:59
msgid "In a transactional cache, local listeners are notified when a transaction begins and when it is completed (either through rollback or commit).  A cluster listener is never notified of anything occurring until after the data has been updated, and thus will only ever be notified of committed entries and also will not receive TransactionRegisteredEvent or TransactionCompletedEvent events."
msgstr ""

#. type: Title ===
#: upstream/_posts/2014-03-05-embedded-cluster-listeners-in.adoc:61
#, no-wrap
msgid "API Changes"
msgstr ""

#. type: Plain text
#: upstream/_posts/2014-03-05-embedded-cluster-listeners-in.adoc:66
msgid "There are a few new API classes that have been added to allow for configuration and operation of cluster listeners."
msgstr ""

#. type: Title ====
#: upstream/_posts/2014-03-05-embedded-cluster-listeners-in.adoc:68
#, no-wrap
msgid "Listener annotation"
msgstr ""

#. type: Plain text
#: upstream/_posts/2014-03-05-embedded-cluster-listeners-in.adoc:73
msgid "The existing org.infinispan.notifications.Listener annotation has had a couple properties added to it."
msgstr ""

#. type: Plain text
#: upstream/_posts/2014-03-05-embedded-cluster-listeners-in.adoc:77
msgid "The new clustered property defines whether or not this listener is a cluster listener or not.  This means the listener will be sent all write modification events."
msgstr ""

#. type: Plain text
#: upstream/_posts/2014-03-05-embedded-cluster-listeners-in.adoc:82
msgid "A cluster listener is not supported in an Invalidation cache.  Local or replicated caches can use a cluster listener though.  They will behave like a local cluster listener, except that replicated will be less performant."
msgstr ""

#. type: Plain text
#: upstream/_posts/2014-03-05-embedded-cluster-listeners-in.adoc:95
msgid "The includeCurrentState property is also new and will provide a way for a listener when being registered to immediately be sent a CacheCreatedEvent for every entry in the cache.  This will be supported for both local and cluster listeners.  In a local listener it will only query the local data that is available, so in the case of a Distributed cache this will still only provide a possible subset of data.  However a clustered listener will retrieve the data from all nodes as needed.  A cache will still be available for writes during the includeCurrentState period.  However the notifications will be queued until all state has been first sent. *NOTE: includeCurrentState is currently not implemented but is planned during this release still* see https://issues.jboss.org/browse/ISPN-4068[ISPN-4068]"
msgstr ""

#. type: Title ====
#: upstream/_posts/2014-03-05-embedded-cluster-listeners-in.adoc:97
#, no-wrap
msgid "KeyValueFilter"
msgstr ""

#. type: Plain text
#: upstream/_posts/2014-03-05-embedded-cluster-listeners-in.adoc:102
msgid "This is a new Filter class that can be used to filter events or other operations based on the key value and metadata of the updated object."
msgstr ""

#. type: Title ====
#: upstream/_posts/2014-03-05-embedded-cluster-listeners-in.adoc:105
#, no-wrap
msgid "Converter"
msgstr ""

#. type: Plain text
#: upstream/_posts/2014-03-05-embedded-cluster-listeners-in.adoc:114
msgid "A converter is used to convert a given key, value, metadata entry to a resulting value. This is useful if your listener doesn't require the entire value and need just a portion from it. Or if the listener were to do some sort of translation, this would allow it to scale to each node instead of having to run the translation all on the node where the listener is registered."
msgstr ""

#. type: Title ====
#: upstream/_posts/2014-03-05-embedded-cluster-listeners-in.adoc:117
#, no-wrap
msgid "Cache"
msgstr ""

#. type: Plain text
#: upstream/_posts/2014-03-05-embedded-cluster-listeners-in.adoc:125
msgid "The cache interface also has an additional overloaded method to allow for registering the previously mentioned KeyValueFilter and Converter with the Listener provided.  Note that either type of listener, cluster or local, may be used with any of the overloaded addListener methods on the Cache interface."
msgstr ""

#. type: Plain text
#: upstream/_posts/2014-03-05-embedded-cluster-listeners-in.adoc:135
msgid "This new method is similar to the other addListener methods, but is specially optimized for use with cluster listeners in distributed mode.  Whenever a modification occurs which would cause an event to be sent to the cluster notifier the KeyValueFilter is first ran to see if this event should even be sent to the listener. If it is then the converter will be used to convert result into whatever data is desired to send back to the listener. These combined allow for reducing overall network traffic for events that you don't want to get or reduce payload size by sending a different or subset of the value."
msgstr ""

#. type: Title ====
#: upstream/_posts/2014-03-05-embedded-cluster-listeners-in.adoc:137
#, no-wrap
msgid "Events"
msgstr ""

#. type: Plain text
#: upstream/_posts/2014-03-05-embedded-cluster-listeners-in.adoc:147
msgid "There are some cases in Infinispan when it is unclear if a notification was properly raised in a non transactional cache. Due to this we have made available an additional value on the CacheEntryCreatedEvent, CacheEntryModifiedEvent, and CacheEntryRemovedEvent. This is to symbolize that this event could have been possibly duplicated or even changed types (CacheEntryModifiedEvent instead of CacheEntryCreatedEvent)."
msgstr ""

#. type: Plain text
#: upstream/_posts/2014-03-05-embedded-cluster-listeners-in.adoc:150
msgid "This should only return true if we had a node who was an owner go down while in the middle of processing the write."
msgstr ""

#. type: Title ===
#: upstream/_posts/2014-03-05-embedded-cluster-listeners-in.adoc:152
#, no-wrap
msgid "Functional Changes"
msgstr ""

#. type: Title ====
#: upstream/_posts/2014-03-05-embedded-cluster-listeners-in.adoc:156
#, no-wrap
msgid "CacheEntryModified during creates"
msgstr ""

#. type: Plain text
#: upstream/_posts/2014-03-05-embedded-cluster-listeners-in.adoc:163
msgid "Prior to Infinispan 7.0, whenever a new entry was created, this would generate both CacheEntryCreated and CacheEntryModified events.  This has been changed now so that only a CacheEntryCreated event is raised to more consistently model what has occurred."
msgstr ""
