# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-02-11 23:24+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: upstream/_posts/2011-09-21-when-infinispan-meets-cdi.adoc:1
#, no-wrap
msgid "---\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2011-09-21-when-infinispan-meets-cdi.adoc:10
#, no-wrap
msgid ""
"layout: blog\n"
"title: When Infinispan meets CDI\n"
"permalink: /blog/:year/:month/:day/when-infinispan-meets-cdi\n"
"date: '2011-09-21T06:37:00.000-07:00'\n"
"author: Kevin Pollet\n"
"tags: [ \"jsr 107\", \"cdi\" ]\n"
"blogger_id: tag:blogger.com,1999:blog-5717179571414330874.post-4649985884255161785\n"
"blogger_orig_url: https://blog.infinispan.org/2011/09/when-infinispan-meets-cdi.html\n"
"---\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2011-09-21-when-infinispan-meets-cdi.adoc:15
msgid "Since version 5.0 (Pagoa) Infinispan has a new module. This module is a portable http://jcp.org/en/jsr/detail?id=299[CDI] extension which integrates Infinispan with the CDI programming model. Here are some highlights of what is provided:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2011-09-21-when-infinispan-meets-cdi.adoc:17
msgid "full integration with *Java EE 6*"
msgstr ""

#. type: Plain text
#: upstream/_posts/2011-09-21-when-infinispan-meets-cdi.adoc:18
#, no-wrap
msgid "**typesafe **cache (and cache manager) injection\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2011-09-21-when-infinispan-meets-cdi.adoc:19
#, no-wrap
msgid "**JCACHE **annotations support\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2011-09-21-when-infinispan-meets-cdi.adoc:22
msgid "Please note that this module is a technology preview and its API can still change. Next let's discuss some of its details."
msgstr ""

#. type: Plain text
#: upstream/_posts/2011-09-21-when-infinispan-meets-cdi.adoc:26
msgid "#Typesafe injection and configuration of cache#"
msgstr ""

#. type: Plain text
#: upstream/_posts/2011-09-21-when-infinispan-meets-cdi.adoc:35
msgid "The first feature you can use out of the box is the *typesafe* injection of the _Cache_ and the _CacheManager_. Without any configuration you can inject the default cache, as well as the cache manager used by the extension. This injection can be performed in any bean managed by Java EE like EJB, Servlet and CDI beans. The only thing to do is to use the _@Inject_ annotation:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2011-09-21-when-infinispan-meets-cdi.adoc:44
msgid "Please note that the cache injection is typed. In this case, only _String_ typed Java objects could be added as key and value."
msgstr ""

#. type: Plain text
#: upstream/_posts/2011-09-21-when-infinispan-meets-cdi.adoc:50
msgid "It's also possible to configure the injected cache using CDI. The first step is to create a CDI qualifier, and then create the cache configuration producer, annotated with _@ConfigureCache_. The qualifier is used to qualify the injection point and the cache configuration producer:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2011-09-21-when-infinispan-meets-cdi.adoc:56
msgid "In the same way, a cache can be defined with the default configuration of the cache manager in use, using a producer field:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2011-09-21-when-infinispan-meets-cdi.adoc:63
msgid "One advantage of this approach is that all cache configurations of the entire application can be gathered together into a single _Configuration_ class."
msgstr ""

#. type: Plain text
#: upstream/_posts/2011-09-21-when-infinispan-meets-cdi.adoc:69
msgid "The Infinispan CDI extension provides a cache manager with a default configuration (and it is used by default). You can also override the default configuration (used by the default cache manager), as well as the default cache manager. You can find more information https://docs.jboss.org/author/x/BAFZ[here]."
msgstr ""

#. type: Plain text
#: upstream/_posts/2011-09-21-when-infinispan-meets-cdi.adoc:71
msgid "#JCache annotations support#"
msgstr ""

#. type: Plain text
#: upstream/_posts/2011-09-21-when-infinispan-meets-cdi.adoc:76
msgid "JCache (aka http://jcp.org/en/jsr/detail?id=107[JSR-107]) is famous as the oldest open JSR. However, this JSR has recently seen extensive progress, and is a candidate for inclusion in Java EE 7 (http://jcp.org/en/jsr/detail?id=342[JSR-342])."
msgstr ""

#. type: Plain text
#: upstream/_posts/2011-09-21-when-infinispan-meets-cdi.adoc:82
msgid "This specification defines a standard caching API to work with a standalone cache, as well as a distributed cache. An interesting part of the specification are the annotations which are designed to solve common caching use cases. Some of the annotations defined by this specification are:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2011-09-21-when-infinispan-meets-cdi.adoc:84
msgid "_@CacheResult_ caches the result of a method call"
msgstr ""

#. type: Plain text
#: upstream/_posts/2011-09-21-when-infinispan-meets-cdi.adoc:85
msgid "_@CachePut_ caches a method parameter"
msgstr ""

#. type: Plain text
#: upstream/_posts/2011-09-21-when-infinispan-meets-cdi.adoc:86
msgid "_@CacheRemoveEntry_ removes an entry from a cache"
msgstr ""

#. type: Plain text
#: upstream/_posts/2011-09-21-when-infinispan-meets-cdi.adoc:87
msgid "_@CacheRemoveAll_ removes all entries from a cache"
msgstr ""

#. type: Plain text
#: upstream/_posts/2011-09-21-when-infinispan-meets-cdi.adoc:89
msgid "The following example illustrates the use of these annotations:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2011-09-21-when-infinispan-meets-cdi.adoc:98
msgid "The Infinispan CDI extension adds support for these annotations. The only thing to do is to enable the CDI interceptors in your application _beans.xml_ - you can find more information https://docs.jboss.org/author/x/BAFZ[here]."
msgstr ""

#. type: Plain text
#: upstream/_posts/2011-09-21-when-infinispan-meets-cdi.adoc:100
msgid "#Infinispan CDI and JBoss AS 7#"
msgstr ""

#. type: Plain text
#: upstream/_posts/2011-09-21-when-infinispan-meets-cdi.adoc:107
msgid "With JBoss AS 7, you can setup an Infinispan cache manager in the server configuration file. This allows you to externalize your Infinispan configuration and also to lookup the cache manager from JNDI, normally with the _@Resource_ annotation. This http://infinispan.blogspot.com/2011/07/infinispan-in-jboss-as7.html[post] has more details on the subject."
msgstr ""

#. type: Plain text
#: upstream/_posts/2011-09-21-when-infinispan-meets-cdi.adoc:113
msgid "As we mentioned earlier, you can override the default cache manager used by the Infinispan CDI extension. To use a JBoss AS 7 configured cache, you need to use the cache manager defined in JBoss AS 7. You only need to annotate the default cache manager producer with _@Resource_.  Simple!"
msgstr ""

#. type: Plain text
#: upstream/_posts/2011-09-21-when-infinispan-meets-cdi.adoc:119
msgid "Now, you can inject the cache defined in JBoss AS 7 as we described earlier."
msgstr ""

#. type: Plain text
#: upstream/_posts/2011-09-21-when-infinispan-meets-cdi.adoc:121
msgid "#What's next?#"
msgstr ""

#. type: Plain text
#: upstream/_posts/2011-09-21-when-infinispan-meets-cdi.adoc:123
msgid "Here is a highlight of the features you will see soon."
msgstr ""

#. type: Plain text
#: upstream/_posts/2011-09-21-when-infinispan-meets-cdi.adoc:125
msgid "support for all JSR 107 annotations - _@CachePut_, _@CacheDefaults_"
msgstr ""

#. type: Plain text
#: upstream/_posts/2011-09-21-when-infinispan-meets-cdi.adoc:126
msgid "support for remote cache"
msgstr ""

#. type: Plain text
#: upstream/_posts/2011-09-21-when-infinispan-meets-cdi.adoc:127
msgid "ability to listen Infinispan events with CDI observers"
msgstr ""

#. type: Plain text
#: upstream/_posts/2011-09-21-when-infinispan-meets-cdi.adoc:128
msgid "and more - let us know what you want ;-)"
msgstr ""

#. type: Plain text
#: upstream/_posts/2011-09-21-when-infinispan-meets-cdi.adoc:132
msgid "As usual you can open issues and features request on the Infinispan https://issues.jboss.org/browse/ISPN[JIRA] (component _CDI Integration_)."
msgstr ""

#. type: Plain text
#: upstream/_posts/2011-09-21-when-infinispan-meets-cdi.adoc:136
msgid "Feel free to open a topic in the Infinispan http://community.jboss.org/en/infinispan?view=discussions[forum] if you need help."
msgstr ""

#. type: Plain text
#: upstream/_posts/2011-09-21-when-infinispan-meets-cdi.adoc:139
msgid "The Infinispan CDI documentation is https://docs.jboss.org/author/x/BAFZ[here]."
msgstr ""

#. type: Plain text
#: upstream/_posts/2011-09-21-when-infinispan-meets-cdi.adoc:144
msgid "To see the Infinispan CDI extension in action you can browse and run the quickstart application https://github.com/infinispan/infinispan-quickstart/tree/master/cdi[here] or watch this http://vimeo.com/27596937[screencast]."
msgstr ""

#. type: Plain text
#: upstream/_posts/2011-09-21-when-infinispan-meets-cdi.adoc:146
msgid "Enjoy!"
msgstr ""

#. type: Plain text
#: upstream/_posts/2011-09-21-when-infinispan-meets-cdi.adoc:156
#, no-wrap
msgid ""
"*About the author*\n"
"# #\n"
"Kevin Pollet is a software engineer at http://www.serli.com/[SERLI] a\n"
"Consulting & Software Engineering company based in France. He's an Open\n"
"Source advocate and contributes on many projects such as Infinispan and\n"
"Hibernate Validator, both at SERLI and at home. He is also involved in\n"
"the Poitou-Charentes JUG and has spoken in many JUG events. He enjoys\n"
"attending Java events like JUDCon, JBoss World and Devoxx.\n"
msgstr ""
