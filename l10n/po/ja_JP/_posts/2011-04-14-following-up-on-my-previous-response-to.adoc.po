# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-02-11 23:24+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: upstream/_posts/2011-04-14-following-up-on-my-previous-response-to.adoc:1
#, fuzzy, no-wrap
msgid "---\n"
msgstr "---\n"

#. type: Plain text
#: upstream/_posts/2011-04-14-following-up-on-my-previous-response-to.adoc:14
#, fuzzy, no-wrap
msgid ""
"layout: blog\n"
"title: A new data grid JSR\n"
"permalink: /blog/:year/:month/:day/following-up-on-my-previous-response-to\n"
"date: '2011-04-14T09:55:00.000-07:00'\n"
"author: msurtani\n"
"tags: [ \"jcp\",\n"
"\"data grids\",\n"
"\"jsr 107\",\n"
"\"standards\",\n"
"]\n"
"blogger_id: tag:blogger.com,1999:blog-5717179571414330874.post-3096773822895982168\n"
"blogger_orig_url: https://blog.infinispan.org/2011/04/following-up-on-my-previous-response-to.html\n"
"---\n"
msgstr ""
"layout: blog\n"
"title: 新しいデータグリッド JSR\n"
"permalink: /blog/:year/:month/:day/following-up-on-my-previous-response-to\n"
"date: '2011-04-14T09:55:00.000-07:00'\n"
"author: msurtani\n"
"tags: [ \"jcp\",\n"
"\"data grids\",\n"
"\"jsr 107\",\n"
"\"standards\",\n"
"]\n"
"blogger_id: tag:blogger.com,1999:blog-5717179571414330874.post-3096773822895982168\n"
"blogger_orig_url: https://blog.infinispan.org/2011/04/following-up-on-my-previous-response-to.html\n"
"---\n"

#. type: Plain text
#: upstream/_posts/2011-04-14-following-up-on-my-previous-response-to.adoc:23
#, fuzzy
msgid "Following up on http://infinispan.blogspot.com/2011/02/jsr-107-and-jsr-on-data-grids.html[my previous] response to http://agoncal.wordpress.com/2011/02/11/java-ee-7-i-have-a-few-dreams/[Antonio Goncalves]' blog post, I have submitted a JSR to the http://www.jcp.org/[JCP] on a data grid standard, titled \"_Java Data Grids_\".  It has yet to be assigned a number by the JCP, but I thought I'd talk about it a little here anyway."
msgstr "link:http://infinispan.blogspot.com/2011/02/jsr-107-and-jsr-on-data-grids.html[前回の] link:http://agoncal.wordpress.com/2011/02/11/java-ee-7-i-have-a-few-dreams/[Antonio Goncalves] 氏のブログ記事への回答に続き、私は _「Java Data Grids_ 」というタイトルのデータグリッド標準に関するJSRを link:http://www.jcp.org/[JCP] に提出しました。 まだJCPから番号が付与されていませんが、ここで少し触れておこうと思いました。"

#. type: Plain text
#: upstream/_posts/2011-04-14-following-up-on-my-previous-response-to.adoc:25
#, fuzzy
msgid "Here is the description of the JSR that I have submitted:"
msgstr "ここでは、私が提出したJSRの説明をします。"

#. type: delimited block _
#: upstream/_posts/2011-04-14-following-up-on-my-previous-response-to.adoc:46
#, fuzzy
msgid "This specification proposes to provide an API for accessing, storing, and managing data in a distributed data grid.  The primary API will build upon and extend JSR-107 (JCACHE) API. In addition to it’s genericized Map-like API to access a Cache, JSR-107 defines SPIs for spooling in-memory data to persistent storage, an API for obtaining a named Cache from a CacheManager and an API to register event listeners.  Above and beyond JSR-107, this JSR will define characteristics and expectations from eviction, replication and distribution, and transactions (via the JTA specification). Further, it would define an asynchronous, non-blocking API as an alternative to JSR-107’s primary API, as non-blocking access to data becomes a concern when an implementation needs to perform remote calls, as in the case of a data grid.  This specification builds upon JSR-107, which is not yet complete. We intend to work with the JSR-107 EG to ensure that their schedule is compatible with the schedule for this JSR. If JSR-107 is unable to complete, we propose merging the last available draft into this specification."
msgstr "本仕様は、分散データグリッドにおけるデータへのアクセス、保存、管理のための API を提供することを提案する。主要な API は、JSR-107 (JCACHE) API を基に構築し、拡張する。JSR-107 は、キャッシュにアクセスするための一般化された Map ライクな API に加えて、インメモリ・データを永続的なストレージにスプールするための SPI、CacheManager から名前付き Cache を取得するための API、およびイベント・リスナーを登録するための API を定義しています。JSR-107を超えて、このJSRは、退避、レプリケーションと配布、およびトランザクション（JTA仕様を介して）の特性と期待値を定義する。さらに、JSR-107のプライマリAPIの代替として、非同期でノンブロッキングなAPIを定義する。本仕様は、まだ完全ではないJSR-107をベースに構築されている。我々は、JSR-107のEGのスケジュールがこのJSRのスケジュールと互換性があるように、JSR-107のEGと協力するつもりである。JSR-107が完成できない場合は、最後に利用可能なドラフトを本仕様にマージすることを提案する。"

#. type: Plain text
#: upstream/_posts/2011-04-14-following-up-on-my-previous-response-to.adoc:50
#, fuzzy
msgid "Data grids are gaining prominence and importance in enterprise Java, particularly as cloud-style deployments gain popularity:"
msgstr "データグリッドは、特にクラウドスタイルのデプロイメントが人気を博していることから、エンタープライズJavaではその存在感と重要性が増しています。"

#. type: Plain text
#: upstream/_posts/2011-04-14-following-up-on-my-previous-response-to.adoc:57
#, fuzzy
msgid "Characteristics such as high availability, along with removal of single points of failure become increasingly important, since cloud infrastructure is inherently unreliable and can be re-provisioned with minimal notice; applications deployed on cloud need to be resilient to this.  "
msgstr "クラウド・インフラストラクチャは本質的に信頼性が低く、最小限の予告で再プロビジョニングが可能であるため、高可用性や単一障害点の排除などの特性がますます重要になってきています。"

#. type: Plain text
#: upstream/_posts/2011-04-14-following-up-on-my-previous-response-to.adoc:60
#, fuzzy
msgid "Further, one of the major benefits of cloud-style deployments is elasticity.  The ability to scale out (and back in) quickly and easily.   Again, data grids have a role to play here.  "
msgstr "さらに、クラウド型のデプロイメントの大きなメリットの1つは、弾力性です。 迅速かつ簡単にスケールアウトして（戻ってきて）利用することができます。 ここでもデータグリッドが役割を果たしています。"

#. type: Plain text
#: upstream/_posts/2011-04-14-following-up-on-my-previous-response-to.adoc:64
#, fuzzy
msgid "Finally, with scalable middleware comes additional stress on the data tier (traditionally an RDBMS), as middleware nodes scale out to cope with load.  Data grids - used as a _distributed_ cache - can help with mitigating database bottlenecks."
msgstr "最後に、スケーラブルなミドルウェアでは、ミドルウェアノードが負荷に対応するためにスケールアウトするため、データ層（従来はRDBMS）にさらなるストレスがかかります。 _分散_ キャッシュとして使用されるデータグリッドは、データベースのボトルネックを軽減するのに役立ちます。"

#. type: Plain text
#: upstream/_posts/2011-04-14-following-up-on-my-previous-response-to.adoc:69
#, fuzzy
msgid "With one of Java EE 7's stated goals being _\"cloud-friendliness\"_, the above are powerful arguments for the inclusion of a distributed data grid standard in Java EE 7."
msgstr "Java EE 7の目標の1つが「クラ _ウド化」_ であることから、上記はJava EE 7に分散データグリッド標準を含めるための強力な論拠です。"

#. type: Plain text
#: upstream/_posts/2011-04-14-following-up-on-my-previous-response-to.adoc:83
#, fuzzy
msgid "What about http://www.jcp.org/en/jsr/detail?id=107[JSR-107]?  JSR-107 - the temporary caching API proposed in 2001 - certainly has a role to play in Java EE too.  Temporary caches are an important part of enterprise middleware, but yet a standard has been sadly missing from a Java EE umbrella specification for far too long.  Spring, having identified the need as well, has a http://static.springsource.org/spring/docs/3.1.0.M1/spring-framework-reference/html/cache.html[temporary caching abstraction] in their current development versions.  Several other non-Java frameworks define temporary caching APIs too (http://guides.rubyonrails.org/caching_with_rails.html[Ruby on Rails], http://docs.djangoproject.com/en/1.3/topics/cache/[Django for Python], http://msdn.microsoft.com/en-us/library/ms972379.aspx[.NET]).  There is no denying JSR-107 is necessary, and necessary as a part of Java EE."
msgstr "link:http://www.jcp.org/en/jsr/detail?id=107[JSR] -107はどうでしょうか？ 2001年に提案された一時的なキャッシュAPIであるJSR-107は、確かにJava EEでも果たすべき役割があります。 一時的なキャッシュはエンタープライズミドルウェアの重要な部分ですが、あまりにも長い間、Java EEのアンブレラ仕様から標準が欠けていました。Springも同様に必要性を認識し、現在の開発バージョンに一時キャッシュの link:http://static.springsource.org/spring/docs/3.1.0.M1/spring-framework-reference/html/cache.html[抽象化を] 持っています。 他のいくつかのJava以外のフレームワークも一時キャッシュAPIを定義しています(Ruby on link:http://guides.rubyonrails.org/caching_with_rails.html[Rails、Django] for link:http://docs.djangoproject.com/en/1.3/topics/cache/[Python、.NET)。] JSR-107が必要であり、Java EEの一部として必要であることは否定できませ link:http://msdn.microsoft.com/en-us/library/ms972379.aspx[ん] 。"

#. type: Plain text
#: upstream/_posts/2011-04-14-following-up-on-my-previous-response-to.adoc:91
#, fuzzy
msgid "But JSR-107 isn't a data grid.  JSR-107 falls short as a standard for data grids, specifically as it doesn't take into account characteristics of distribution and replication of data, and doesn't define a contract that implementations would have to adhere to when it comes to moving data around a cluster.  Crucial things for a data grid that, if not baked into a specification, will hinder portability and render the standard itself useless and impotent."
msgstr "しかし、JSR-107はデータグリッドではありません。 JSR-107はデータグリッドの規格としては不十分であり、特にデータの流通や複製の特性を考慮しておらず、クラスタ内でデータを移動する際に実装者が守らなければならない契約を定義していません。 データグリッドにとって重要なことですが、仕様に組み込まれていなければ、移植性の妨げになり、規格自体が無意味で無意味なものになってしまうでしょう。"

#. type: Plain text
#: upstream/_posts/2011-04-14-following-up-on-my-previous-response-to.adoc:97
#, fuzzy
msgid "Further, with remote capabilities in mind, a data grid should also expose a non-blocking API, since network calls can be a limiting factor.   Invoking methods that involve remote calls should be able to be done in an asynchronous fashion.  Stuff that is irrelevant to a temporary caching API like JSR-107."
msgstr "さらに、リモート機能を考慮して、データグリッドはノンブロッキングAPIを公開すべきです。 リモートコールを含むメソッドの呼び出しは非同期で行えるようにすべきです。 JSR-107のような一時的なキャッシングAPIとは無関係なものです。"

#. type: Plain text
#: upstream/_posts/2011-04-14-following-up-on-my-previous-response-to.adoc:103
#, fuzzy
msgid "So with all that in mind, I'd love to hear your thoughts on the data grid JSR.  In addition to Red Hat, the JSR is currently backed by a major Java EE and data grid vendor which cannot be named at this stage, along with independent JCP members with relevant interest and background."
msgstr "そのため、データグリッドJSRについてのご意見をお聞きしたいと思います。 Red Hatに加えて、JSRは現在、主要なJava EEとデータグリッドベンダー（現段階では名前を挙げることができませんが）と、関連する関心と背景を持つ独立したJCPのメンバーによってバックアップされています。"

#. type: Plain text
#: upstream/_posts/2011-04-14-following-up-on-my-previous-response-to.adoc:105
#, fuzzy
msgid "Cheers Manik"
msgstr "乾杯 マニク"
