# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-02-11 23:24+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: upstream/_posts/2013-05-20-storing-arrays-in-infinispan-53-without.adoc:1
#, no-wrap
msgid "---\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2013-05-20-storing-arrays-in-infinispan-53-without.adoc:10
#, no-wrap
msgid ""
"layout: blog\n"
"title: Storing arrays in Infinispan 5.3 without wrapper objects!\n"
"permalink: /blog/:year/:month/:day/storing-arrays-in-infinispan-53-without\n"
"date: '2013-05-20T03:22:00.002-07:00'\n"
"author: galder\n"
"tags: [ \"equivalence\", \"memory\" ]\n"
"blogger_id: tag:blogger.com,1999:blog-5717179571414330874.post-6616866972702199200\n"
"blogger_orig_url: https://blog.infinispan.org/2013/05/storing-arrays-in-infinispan-53-without.html\n"
"---\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2013-05-20-storing-arrays-in-infinispan-53-without.adoc:14
msgid "As we head towards the latter part of Infinispan 5.3 series, we're doing a series of blog posts where we provide more detailed information of some of the key features in this release."
msgstr ""

#. type: Plain text
#: upstream/_posts/2013-05-20-storing-arrays-in-infinispan-53-without.adoc:21
msgid "As part of Infinispan 5.3.0.Beta1, we added the ability to store data directly in Infinispan which previously would have required using a custom wrapper object, e.g. arrays. The way Infinispan supports storing these type of objects is by allowing a custom https://github.com/infinispan/infinispan/blob/master/core/src/main/java/org/infinispan/util/Equivalence.java[Equivalence] function to be configured for keys and/or values."
msgstr ""

#. type: Plain text
#: upstream/_posts/2013-05-20-storing-arrays-in-infinispan-53-without.adoc:28
msgid "This is a less cumbersome method that enables object requiring custom equals/hashCode implementations to be stored without incurring on a extra cost per cache entry. We've already been using this internally to store Hot Rod, REST and Memcached data where keys and/or values can be byte arrays, and we've seen some nice improvements in terms of memory consumption."
msgstr ""

#. type: Plain text
#: upstream/_posts/2013-05-20-storing-arrays-in-infinispan-53-without.adoc:33
msgid "A nice side effect of being able to store byte arrays natively is that it makes sharing data between multiple endpoints less cumbersome since you're now dealing with byte arrays directly instead of having to wrap/unwrap the byte arrays. More on this topic very shortly."
msgstr ""

#. type: Plain text
#: upstream/_posts/2013-05-20-storing-arrays-in-infinispan-53-without.adoc:40
msgid "Full details on how to implement and configure these new https://github.com/infinispan/infinispan/blob/master/core/src/main/java/org/infinispan/util/Equivalence.java[Equivalence] functions can be found in the https://docs.jboss.org/author/x/2oD2Aw[Infinispan community documentation]. To give this a go, make sure you http://www.jboss.org/infinispan/downloads[download the latest Infinispan 5.3 release]."
msgstr ""

#. type: Plain text
#: upstream/_posts/2013-05-20-storing-arrays-in-infinispan-53-without.adoc:42
msgid "Cheers, Galder"
msgstr ""
