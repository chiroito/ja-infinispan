# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-02-11 23:24+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: upstream/_posts/2017-03-20-memory-and-cpu-constraints-inside.adoc:1
#, no-wrap
msgid "---\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-03-20-memory-and-cpu-constraints-inside.adoc:10
#, no-wrap
msgid ""
"layout: blog\n"
"title: Memory and CPU constraints inside a Docker Container\n"
"permalink: /blog/:year/:month/:day/memory-and-cpu-constraints-inside\n"
"date: '2017-03-20T01:40:00.000-07:00'\n"
"author: slaskawiec\n"
"tags: [ \" docker\", \"openshift\", \"kubernetes\" ]\n"
"blogger_id: tag:blogger.com,1999:blog-5717179571414330874.post-7557678252341598874\n"
"blogger_orig_url: https://blog.infinispan.org/2017/03/memory-and-cpu-constraints-inside.html\n"
"---\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-03-20-memory-and-cpu-constraints-inside.adoc:16
msgid "In one of the http://blog.infinispan.org/2016/07/improved-infinispan-docker-image.html[previous blog posts] we wrote about different configuration options for our Docker image. Now we did another step adding auto-configuration steps for memory and CPU constraints."
msgstr ""

#. type: Title ==
#: upstream/_posts/2017-03-20-memory-and-cpu-constraints-inside.adoc:18
#, no-wrap
msgid "Before we dig in..."
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-03-20-memory-and-cpu-constraints-inside.adoc:29
msgid "Setting memory and CPU constraints to containers is very popular technique especially for public cloud offerings (such as https://docs.openshift.org/latest/dev_guide/compute_resources.html[OpenShift]).  Behind the scenes everything works based on adding https://docs.docker.com/engine/admin/resource_constraints/[additional Docker settings] to the containers. There are two very popular switches: _--memory_ (which is responsible for setting the amount of available memory) and _--cpu-quota_ (which throttles CPU usage)."
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-03-20-memory-and-cpu-constraints-inside.adoc:34
msgid "Now here comes the best part... JDK has no idea about those settings! We will probably need to wait until http://hg.openjdk.java.net/jdk9/jdk9/hotspot/rev/5f1d1df0ea49[JDK9] for getting full CGroups support."
msgstr ""

#. type: Title ==
#: upstream/_posts/2017-03-20-memory-and-cpu-constraints-inside.adoc:36
#, no-wrap
msgid "What can we do about it?"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-03-20-memory-and-cpu-constraints-inside.adoc:43
msgid "The answer is very simple, we need to tell JDK what is the available memory (at least by setting _Xmx_) and available number of CPUs (by setting http://www.oracle.com/technetwork/articles/java/g1gc-1984535.html[_XX:ParallelGCThreads_, _XX:ConcGCThreads_] and _https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ForkJoinPool.html[Djava.util.concurrent.ForkJoinPool.common.parallelism]_)."
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-03-20-memory-and-cpu-constraints-inside.adoc:45
msgid "And we have some very good news! We already did it for you!"
msgstr ""

#. type: Title ==
#: upstream/_posts/2017-03-20-memory-and-cpu-constraints-inside.adoc:47
#, no-wrap
msgid "Let's test it out!"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-03-20-memory-and-cpu-constraints-inside.adoc:51
msgid "At first you need to pull our latest Docker image:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-03-20-memory-and-cpu-constraints-inside.adoc:54
msgid "Then run it with CPU and memory limits using the following command:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-03-20-memory-and-cpu-constraints-inside.adoc:58
msgid "Note that JAVA_OPTS variable was overridden. Let's have a look what had happened:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-03-20-memory-and-cpu-constraints-inside.adoc:63
msgid "-Xms64m -Xmx350m - it is always a good idea to https://developers.redhat.com/blog/2014/07/15/dude-wheres-my-paas-memory-tuning-javas-footprint-in-openshift-part-1/[set _Xmn_] inside a Docker container. Next we set _Xmx_ to 70% of available memory. "
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-03-20-memory-and-cpu-constraints-inside.adoc:66
msgid "-XX:ParallelGCThreads=6 -XX:ConcGCThreads=6 -Djava.util.concurrent.ForkJoinPool.common.parallelism=6 - The next thing is setting CPU throttling as I explained above."
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-03-20-memory-and-cpu-constraints-inside.adoc:70
msgid "There might be some cases where you wouldn't like to set those properties automatically. In that case, just pass _-n_ switch to the starter script:"
msgstr ""

#. type: Title ===
#: upstream/_posts/2017-03-20-memory-and-cpu-constraints-inside.adoc:77
#, no-wrap
msgid "More reading"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-03-20-memory-and-cpu-constraints-inside.adoc:83
msgid "If this topic sounds interesting to you, do not forget to have a look at those links:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-03-20-memory-and-cpu-constraints-inside.adoc:86
msgid "A great series of articles about memory and CPU in the containers by Andrew Dinn"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-03-20-memory-and-cpu-constraints-inside.adoc:88
msgid "A practical implementation by Fabric8 Team"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-03-20-memory-and-cpu-constraints-inside.adoc:90
msgid "A great article about memory limits by Rafael Benevides"
msgstr ""

#. type: Plain text
#: upstream/_posts/2017-03-20-memory-and-cpu-constraints-inside.adoc:92
msgid "OpenShift guidelines for creating Docker images"
msgstr ""
